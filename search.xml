<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>JAVA后端学习计划</title>
    <url>/2024/03/19/JAVA%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/</url>
    <content><![CDATA[<h1 id="java后端内容学习"><a class="markdownIt-Anchor" href="#java后端内容学习"></a> JAVA后端内容学习</h1>
<table>
<thead>
<tr>
<th style="text-align:center"><strong>Java基础<br>（已完成）</strong></th>
<th><a href="https://www.bilibili.com/video/BV17F411T7Ao/?share_source=copy_web&amp;vd_source=96f983f689673aeb998155061f545543"><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240207173142846.png" alt="image-20240207173142846"></a><a href="https://www.bilibili.com/video/BV1yW4y1Y7Ms/?share_source=copy_web&amp;vd_source=96f983f689673aeb998155061f545543"><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240207173232867.png" alt="image-20240207173232867"></a></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>JavaWeb<br>（已完成）</strong></td>
<td><a href="https://www.bilibili.com/video/BV1m84y1w7Tb/?share_source=copy_web&amp;vd_source=96f983f689673aeb998155061f545543"><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240207131825110.png" alt="image-20240207131825110"></a></td>
</tr>
<tr>
<td style="text-align:center"><strong>单体项目苍穹外卖<br>（已完成）</strong></td>
<td><a href="https://www.bilibili.com/video/BV1TP411v7v6/?share_source=copy_web&amp;vd_source=96f983f689673aeb998155061f545543"><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240207131900926.png" alt="image-20240207131900926"></a></td>
</tr>
<tr>
<td style="text-align:center"><strong>Git<br>（已完成）</strong></td>
<td><a href="https://www.bilibili.com/video/BV1MU4y1Y7h5/?share_source=copy_web&amp;vd_source=96f983f689673aeb998155061f545543"><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240207173404539.png" alt="image-20240207173404539"></a></td>
</tr>
<tr>
<td style="text-align:center"><strong>SpringCloud<br>(进度：第七章)</strong></td>
<td><a href="https://www.bilibili.com/video/BV1LQ4y127n4/?share_source=copy_web&amp;vd_source=96f983f689673aeb998155061f545543"><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240207173523057.png" alt="image-20240207173523057"></a></td>
</tr>
<tr>
<td style="text-align:center"><strong>学成在线<br>(已完成)</strong></td>
<td><a href="https://www.bilibili.com/video/BV1j8411N7Bm/?share_source=copy_web&amp;vd_source=96f983f689673aeb998155061f545543"><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240207173746548.png" alt="image-20240207173746548"></a></td>
</tr>
<tr>
<td style="text-align:center"><strong>Mysql<br>(未学习)</strong></td>
<td><a href="https://www.bilibili.com/video/BV1Kr4y1i7ru/?share_source=copy_web&amp;vd_source=96f983f689673aeb998155061f545543"><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240207180731511.png" alt="image-20240207180731511"></a></td>
</tr>
<tr>
<td style="text-align:center"><strong>Redis<br>(未学习)</strong></td>
<td><a href="https://www.bilibili.com/video/BV1cr4y1671t/?share_source=copy_web&amp;vd_source=96f983f689673aeb998155061f545543"><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240207180911403.png" alt="image-20240207180911403"></a></td>
</tr>
<tr>
<td style="text-align:center"><strong>Java设计模式<br>(未学习)</strong></td>
<td><a href="https://www.bilibili.com/video/BV1Np4y1z7BU/?share_source=copy_web&amp;vd_source=96f983f689673aeb998155061f545543"><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240207181106619.png" alt="image-20240207181106619"></a></td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>计划</tag>
        <tag>目标</tag>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Git基础教程</title>
    <url>/2024/03/18/Git%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="git"><a class="markdownIt-Anchor" href="#git"></a> Git</h1>
<p><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/gitlogo.png" alt=""></p>
<h1 id="1-版本管理工具概念"><a class="markdownIt-Anchor" href="#1-版本管理工具概念"></a> 1 版本管理工具概念</h1>
<p>在平时开发中,可能有时要用到上个版本的内容,例如:</p>
<blockquote>
<p>领导让写文档,写好了,领导让修改,改好了,领导觉得第一版不错,改回来吧,此时内心一脸懵,第一版长啥样没存档啊</p>
</blockquote>
<p>实际上,代码开发中也需要这样的软件来管理我们的代码. 例如我们经常会碰到如下的现象:</p>
<blockquote>
<p>改之前好好的,改完就报错了,也没怎么修改啊</p>
</blockquote>
<p>在这种情况下如果不能查看修改之前的代码,查找问题是非常困难的.</p>
<p>如果有一个软件能记录我们对文档的所有修改,所有版本,那么上面的问题讲迎刃而解.而这类软件我们一般叫做版本控制工具</p>
<p>版本管理工具一般具有如下特性:</p>
<blockquote>
<p>能够记录历史版本,回退历史版本<br>
团队开发,方便代码合并</p>
</blockquote>
<h1 id="2-主流版本管理工具介绍"><a class="markdownIt-Anchor" href="#2-主流版本管理工具介绍"></a> 2 主流版本管理工具介绍</h1>
<h2 id="git-2"><a class="markdownIt-Anchor" href="#git-2"></a> Git</h2>
<p>工作流程</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">Git是分布式版本控制系统（Distributed Version Control System，简称 DVCS），分为两种类型的仓库：</span><br><span class="line">本地仓库和远程仓库</span><br><span class="line">工作流程如下</span><br><span class="line">    1．从远程仓库中克隆或拉取代码到本地仓库(clone/pull)</span><br><span class="line">    2．从本地进行代码修改</span><br><span class="line">    3．在提交前先将代码提交到暂存区</span><br><span class="line">    4．提交到本地仓库。本地仓库中保存修改的各个历史版本</span><br><span class="line">    5．修改完成后，需要和团队成员共享代码时，将代码push到远程仓库</span><br></pre></td></tr></table></figure>
<p><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/git.png" alt=""></p>
<p>Windows下载地址: <a href="https://git-scm.com/download/win">Git - Downloading Package (git-scm.com)</a></p>
<p>Linux/Unix下载方法: <a href="https://git-scm.com/download/linux">Git (git-scm.com)</a></p>
<h1 id="3-git工作流程"><a class="markdownIt-Anchor" href="#3-git工作流程"></a> 3 Git工作流程</h1>
<p><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/git%E6%B5%81%E7%A8%8B.png" alt=""></p>
<h1 id="4-命令行-git基本操作"><a class="markdownIt-Anchor" href="#4-命令行-git基本操作"></a> 4 命令行-- git基本操作</h1>
<h3 id="41-环境配置"><a class="markdownIt-Anchor" href="#41-环境配置"></a> 4.1 环境配置</h3>
<ol>
<li>打开Git Bash</li>
<li>设置用户信息</li>
</ol>
<p>邮箱可以是假邮箱</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global user.name “wwhds”</span><br><span class="line"></span><br><span class="line">git config --global user.email “hello@wwhds.cn”</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>查看配置信息</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global user.name</span><br><span class="line"></span><br><span class="line">git config --global user.email</span><br></pre></td></tr></table></figure>
<h3 id="42-为常用指令配置别名"><a class="markdownIt-Anchor" href="#42-为常用指令配置别名"></a> 4.2 为常用指令配置别名</h3>
<p>有些常用的指令参数非常多，每次都要输入好多参数，我们可以使用别名。</p>
<h4 id="421-如何定义和使用别名"><a class="markdownIt-Anchor" href="#421-如何定义和使用别名"></a> 4.2.1 如何定义和使用别名</h4>
<p>要定义 Git 的别名，请使用 <code>git config</code> 命令，加上别名和要替换的命令。例如，要为 <code>git push</code> 创建别名 <code>p</code>：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git config --global alias.p <span class="string">'push'</span></span></span><br></pre></td></tr></table></figure>
<p>你可以通过将别名作为 <code>git</code> 的参数来使用别名，就像其他命令一样：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git p</span></span><br></pre></td></tr></table></figure>
<p>要查看所有的别名，用 <code>git config</code> 列出你的配置：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git config --global -l</span></span><br><span class="line">user.name=ricardo</span><br><span class="line">user.email=ricardo@example.com</span><br><span class="line">alias.p=push</span><br></pre></td></tr></table></figure>
<p>无论使用哪种方法，定义别名都能改善你使用 Git 的整体体验。更多关于定义 Git 别名的信息，请看《<a href="https://link.zhihu.com/?target=https%3A//git-scm.com/book/en/v2/Git-Basics-Git-Aliases">Git Book</a>》。</p>
<h4 id="422-有用的-git-别名"><a class="markdownIt-Anchor" href="#422-有用的-git-别名"></a> 4.2.2 有用的 Git 别名</h4>
<ol>
<li>
<p><strong>Git 单行日志</strong></p>
<p>以单行方式显示你的提交，使输出更紧凑：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global alias.ll 'log --pretty=oneline --all --graph --abbrev-commit'</span><br></pre></td></tr></table></figure>
<ul>
<li><code>--pretty=oneline</code>: 将每个提交的信息压缩为一行，只显示提交的哈希值和提交信息。</li>
<li><code>--all</code>: 显示所有分支的提交历史记录，包括本地分支和远程分支。</li>
<li><code>--graph</code>: 以图形化的方式显示提交历史记录，显示分支、合并等关系。</li>
<li><code>--abbrev-commit</code>: 缩短每个提交的哈希值为7个字符，减少显示的字符数，方便查看。</li>
</ul>
<p>使用这个别名可以提供所有提交的简短列表：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git ll</span></span><br><span class="line">* ea12179 (HEAD -&gt; master, origin/master) 导出运营数据报表 后端开发结束</span><br><span class="line">* 96f64fd 数据统计功能开发</span><br><span class="line">* 8fba9e4 用户催单和接单提醒功能开发</span><br><span class="line">* 8c96623 地址簿相关功能开发 管理端订单功能开发 用户端订单功能开发 微信支付模拟xxxxxxxxxx * ea12179 (HEAD -&gt; master, origin/master) 导出运营数据报表 后端开发结束* 96f64fd 数据统计功能开发* 8fba9e4 用户催单和接单提醒功能开发* 8c96623 地址簿相关功能开发 管理端订单功能开发 用户端订单功能开发 微信支付模拟$ git ll33559c5 (HEAD -&gt; master) Another commit17646c1 test1</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>Git 的最近一次提交</strong></p>
<p>这将显示你最近一次提交的详细信息。这是扩展了《Git Book》中 <a href="https://link.zhihu.com/?target=https%3A//git-scm.com/book/en/v2/Git-Basics-Git-Aliases">别名</a> 一章的例子：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git config --global alias.last <span class="string">'log -1 HEAD --stat'</span></span></span><br></pre></td></tr></table></figure>
<p>用它来查看最后的提交：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git last</span></span><br><span class="line">commit f3dddcbaabb928f84f45131ea5be88dcf0692783 (HEAD -&gt; branch1)</span><br><span class="line">Author: ricardo &lt;ricardo@example.com&gt;</span><br><span class="line">Date:   Tue Nov 3 00:19:52 2020 +0000</span><br><span class="line"></span><br><span class="line">    Commit to branch1</span><br><span class="line"></span><br><span class="line"> test2 | 1 +</span><br><span class="line"> test3 | 0</span><br><span class="line"> 2 files changed, 1 insertion(+)</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>Git 远程仓库</strong></p>
<p><code>git remote -v</code> 命令列出了所有配置的远程仓库。用别名 <code>rv</code> 将其缩短：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git config --global alias.rv <span class="string">'remote -v'</span></span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>Git 配置列表</strong></p>
<p><code>gl</code> 别名可以更方便地列出所有用户配置：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git config --global alias.gl <span class="string">'config --global -l'</span></span></span><br></pre></td></tr></table></figure>
<p>现在可以查看用户配置了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">user.name=Wwhds</span><br><span class="line">user.email=a1605691832@163.com</span><br><span class="line">core.quotepath=false</span><br><span class="line">alias.ll=log --pretty=oneline --all --graph --abbrev-commit</span><br><span class="line">alias.last=log -1 HEAD --stat</span><br><span class="line">alias.rv=remote -v</span><br><span class="line">alias.gl=config --global -l</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="43-解决gitbash乱码问题"><a class="markdownIt-Anchor" href="#43-解决gitbash乱码问题"></a> 4.3 解决GitBash乱码问题</h3>
<ol>
<li>打开GitBash执行下面命令</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global core.quotepath false</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>${git_home}/etc/bash.bashrc 文件最后加入下面两行</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export LANG="zh_CN.UTF-8" </span><br><span class="line">export LC_ALL="zh_CN.UTF-8"</span><br></pre></td></tr></table></figure>
<h3 id="44-获取本地仓库"><a class="markdownIt-Anchor" href="#44-获取本地仓库"></a> 4.4 获取本地仓库</h3>
<p>要使用Git对我们的代码进行版本控制，首先需要获得本地仓库</p>
<ol>
<li>
<p>在电脑的任意位置创建一个空目录（例如test）作为我们的本地Git仓库</p>
</li>
<li>
<p>进入这个目录中，点击右键打开Git bash窗口</p>
</li>
<li>
<p>执行命令git init</p>
</li>
<li>
<p>如果创建成功后可在文件夹下看到隐藏的.git目录。</p>
</li>
</ol>
<p><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/git_init.png" alt=""></p>
<h3 id="45-基础操作指令"><a class="markdownIt-Anchor" href="#45-基础操作指令"></a> 4.5 基础操作指令</h3>
<p><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/git_work.png" alt=""></p>
<h4 id="451-查看修改状态-status"><a class="markdownIt-Anchor" href="#451-查看修改状态-status"></a> 4.5.1 查看修改状态 (status)</h4>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git status</span></span><br></pre></td></tr></table></figure>
<p>不同文件状态不同</p>
<ul>
<li>Untracked files 新创建的文件是未跟踪状态</li>
<li>Changes to be committed 即将被提交</li>
<li>Changes not staged for commit 修改并未添加至暂存区来提交</li>
<li>nothing to commit,working tree clean 提交后显示没有东西可以提交</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">On branch master</span><br><span class="line">Changes not staged for commit:                                </span><br><span class="line">  (use "git add &lt;file&gt;..." to update what will be committed)</span><br><span class="line">  (use "git restore &lt;file&gt;..." to discard changes in working directory)</span><br><span class="line">        modified:   file01.txt</span><br><span class="line">Untracked files:                                                             </span><br><span class="line">  (use "git add &lt;file&gt;..." to include in what will be committed)</span><br><span class="line">        file02.txt</span><br><span class="line"></span><br><span class="line">no changes added to commit (use "git add" and/or "git commit -a")</span><br></pre></td></tr></table></figure>
<h4 id="451-添加工作区到暂存区add"><a class="markdownIt-Anchor" href="#451-添加工作区到暂存区add"></a> 4.5.1 添加工作区到暂存区(add)</h4>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git add .</span></span><br></pre></td></tr></table></figure>
<ul>
<li>作用：添加工作区一个或多个文件的修改到暂存区</li>
</ul>
<p>将暂存区指定文件回退</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git reset <span class="string">"文件名"</span></span></span><br></pre></td></tr></table></figure>
<p>将暂存区全部文件回退</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git reset</span></span><br></pre></td></tr></table></figure>
<h4 id="452-提交暂存区到本地仓库commit"><a class="markdownIt-Anchor" href="#452-提交暂存区到本地仓库commit"></a> 4.5.2 提交暂存区到本地仓库(commit)</h4>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git commit -m <span class="string">'注释内容'</span></span></span><br></pre></td></tr></table></figure>
<ul>
<li>作用：提交暂存区汇总所有内容到本地仓库的当前分支</li>
<li>命令形式：git commit -m ‘注释内容’</li>
</ul>
<h4 id="453-查看提交日志log"><a class="markdownIt-Anchor" href="#453-查看提交日志log"></a> 4.5.3 查看提交日志(log)</h4>
<p>在4.2.2中设置了git log的别名并添加设置。</p>
<p>我们使用别名即可:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git ll</span></span><br></pre></td></tr></table></figure>
<p>效果如下:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">* 34fa638 (HEAD -&gt; master) file01</span><br></pre></td></tr></table></figure>
<p>若想获得更详细的信息:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span></span></span><br></pre></td></tr></table></figure>
<p>效果如下:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">commit 34fa638efcb9fbe96b997a0cab2fe2dd73f8f15b (HEAD -&gt; master)</span><br><span class="line">Author: Wwhds &lt;a1605691832@163.com&gt;</span><br><span class="line">Date:   Wed Feb 7 15:26:15 2024 +0800</span><br><span class="line"></span><br><span class="line">    file01</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>提交时候添加的备注会被放到日志中</p>
<h4 id="454-版本回退"><a class="markdownIt-Anchor" href="#454-版本回退"></a> 4.5.4 版本回退</h4>
<p>撤回到之前的某个操作，他回去删除我们撤回到位置之后的版本</p>
<ul>
<li>作用：版本切换</li>
<li>命令形式：git reset --hard commitID
<ul>
<li>commitID 可以使用 git-log 或 git log 指令查看</li>
</ul>
</li>
<li>如何查看已经删除的记录？
<ul>
<li>git reflog</li>
<li>这个指令可以看到已经删除的提交记录</li>
</ul>
</li>
</ul>
<p>我们可以在reflog里面知道删除文件的id，我们可以直接使用命令git reset --hard commitID 还原</p>
<p>所以</p>
<p>git reset --hard commitID既可以做版本回退，也可以做版本还原</p>
<h4 id="455-添加文件至忽略列表"><a class="markdownIt-Anchor" href="#455-添加文件至忽略列表"></a> 4.5.5 添加文件至忽略列表</h4>
<p>一般我们总会有些文件无需纳入Git 的管理，也不希望它们总出现在未跟踪文件列表。 通常都是些自动</p>
<p>生成的文件，比如日志文件，或者编译过程中创建的临时文件等。 在这种情况下，我们可以在工作目录</p>
<p>中<strong>创建一个名为 .gitignore 的文件（文件名称固定），列出要忽略的文件模式</strong>。</p>
<p>下面是一个示例：</p>
<p>先创建一个.gitignore文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">touch</span> .gitignore</span></span><br></pre></td></tr></table></figure>
<p>然后使用vi指令对.gitignore文件进行编辑</p>
<blockquote>
<p>在其中插入*.txt</p>
</blockquote>
<p>那么之后的提交便会无视.txt后缀的文件</p>
<h4 id="456-基础操作指令练习"><a class="markdownIt-Anchor" href="#456-基础操作指令练习"></a> 4.5.6 基础操作指令练习</h4>
<ol>
<li>新建一个文件夹在其中初始化git仓库</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git init</span></span><br></pre></td></tr></table></figure>
<ol start="2">
<li>创建file01.txt并在其中写入"12345"</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">touch</span> file01.txt</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vi file01.txt</span></span><br></pre></td></tr></table></figure>
<ol start="3">
<li>查看工作目录状态</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git status</span></span><br></pre></td></tr></table></figure>
<p>此时我们会看到:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">On branch master</span><br><span class="line"></span><br><span class="line">No commits yet</span><br><span class="line"></span><br><span class="line">Untracked files:</span><br><span class="line">  (use "git add &lt;file&gt;..." to include in what will be committed)</span><br><span class="line">        file01.txt</span><br><span class="line"></span><br><span class="line">nothing added to commit but untracked files present (use "git add" to track)</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>将file01.txt加入暂存区</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git add .</span></span><br></pre></td></tr></table></figure>
<ol start="5">
<li>将暂存区的file01.txt提交到本地仓库</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git commit -m <span class="string">'file01.txt'</span></span></span><br></pre></td></tr></table></figure>
<ol start="6">
<li>修改file01.txt内容为"23333"并提交到本地仓库</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git add .</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git commit -m <span class="string">'file01.txt update'</span></span></span><br></pre></td></tr></table></figure>
<ol start="7">
<li>利用别名查看日志</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git ll</span></span><br></pre></td></tr></table></figure>
<ol start="8">
<li>回退到第一次提交的版本</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"> git reset a8c40cb --hard</span></span><br></pre></td></tr></table></figure>
<h3 id="46-分支"><a class="markdownIt-Anchor" href="#46-分支"></a> 4.6 分支</h3>
<p>几乎所有的版本控制系统都以某种形式支持分支。 使用分支意味着你可以把你的工作从开发主线上分离</p>
<p>开来进行重大的Bug修改、开发新的功能，以免影响开发主线。master是我们的主线</p>
<p>每个人开发的那一部分就是一个分支，使得每个人的开发互不影响，在每个人都开发完后就将所有的代码汇总到一起，此时就要执行分支的合并操作</p>
<p>工作区只能在一个分支工作，每个分支存放的文件或者资源是不一样的，就相当于不同的文件夹</p>
<h4 id="461-查看本地分支"><a class="markdownIt-Anchor" href="#461-查看本地分支"></a> 4.6.1 查看本地分支</h4>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git branch</span></span><br></pre></td></tr></table></figure>
<p>带星号的表示当前分支</p>
<h4 id="462-创建本地分支branch"><a class="markdownIt-Anchor" href="#462-创建本地分支branch"></a> 4.6.2 创建本地分支(branch)</h4>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git branch <span class="string">"分支名"</span></span></span><br></pre></td></tr></table></figure>
<p>创建的新分支会建立在当前分支的版本之上，所以新建的分支会有当前分支的内容</p>
<h4 id="463-切换分支checkout"><a class="markdownIt-Anchor" href="#463-切换分支checkout"></a> 4.6.3 切换分支(checkout)</h4>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git checkout</span></span><br></pre></td></tr></table></figure>
<p>我们还可直接切换到一个不存在的分支（创建并切换)</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git checkout -b</span></span><br></pre></td></tr></table></figure>
<h4 id="464-合并分支merge"><a class="markdownIt-Anchor" href="#464-合并分支merge"></a> 4.6.4 合并分支(merge)</h4>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git merge <span class="string">"分支名"</span></span></span><br></pre></td></tr></table></figure>
<p>注意：分支上的内容必须先提交,才能切换分支</p>
<p>一个分支上的提交可以合并到另一个分支</p>
<p>在每个人都开发完后就将所有的代码汇总到一起，此时就要执行分支的合并操作</p>
<p>当分支岔开时表示多个人在修改同一个文件</p>
<h4 id="465-删除分支"><a class="markdownIt-Anchor" href="#465-删除分支"></a> 4.6.5 删除分支</h4>
<p><strong>不能删除当前分支，只能删除其他分支</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git branch -d b1 删除分支时，需要做各种检查</span><br><span class="line">git branch -D b1 不做任何检查，强制删除</span><br></pre></td></tr></table></figure>
<h4 id="466-解决冲突"><a class="markdownIt-Anchor" href="#466-解决冲突"></a> 4.6.6 解决冲突</h4>
<p>当我们合并分支后，两个或者多个分支对同一个文件的同一个地方进行修改的时候（不是同一个地方是不会出现冲突的 ），此时git就不知道要取哪个分支修改的值，是取a分支修改的值，还是取b分支修改的值呢，此时就产生了冲突</p>
<p><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/%E5%86%B2%E7%AA%81%E6%8A%A5%E9%94%99.png" alt=""></p>
<p>冲突时文件具体内容如下:</p>
<p><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/%E5%86%B2%E7%AA%81%E5%85%B7%E4%BD%93%E6%83%85%E5%86%B5.png" alt=""></p>
<p>第一个count值表示的是当前分支修改的值</p>
<p>第二个count值是在dev分支修改的值</p>
<p>当两个分支上对文件的修改可能会存在冲突，例如同时修改了同一个文件的同一行，这时就需要手动解</p>
<p>决冲突，<strong>解决冲突步骤如下：</strong></p>
<p>其实我们就是直接手动去删除文件中的一个分支，留下一个分支，这样就不会冲突了</p>
<ol>
<li>处理文件中冲突的地方</li>
<li>将解决完冲突的文件加入暂存区(add)</li>
<li>提交到仓库(commit)</li>
</ol>
<h4 id="467-开发中分支使用原则与流程"><a class="markdownIt-Anchor" href="#467-开发中分支使用原则与流程"></a> 4.6.7 开发中分支使用原则与流程</h4>
<p>几乎所有的版本控制系统都以某种形式支持分支。 使用分支意味着你可以把你的工作从开发主线上分离</p>
<p>开来进行重大的Bug修改、开发新的功能，以免影响开发主线。</p>
<p>在开发中，一般有如下分支使用原则与流程：</p>
<ul>
<li>master （生产） 分支</li>
</ul>
<p>线上分支，主分支，中小规模项目作为线上运行的应用对应的分支；</p>
<ul>
<li>develop（开发）分支</li>
</ul>
<p>是从master创建的分支，一般作为开发部门的主要开发分支，如果没有其他并行开发不同期上线</p>
<p>要求，都可以在此版本进行开发，阶段开发完成后，需要是合并到master分支,准备上线。</p>
<blockquote>
<p>例如我们要开发新功能，我们要可以在develop分支上在建一个分支，新功能一般叫做feature分支，开发完以后在合并到 develop分支上面去，而不是直接提交到master分支，最后项目做完了develop在合并到master分支上</p>
</blockquote>
<p>develop和master分支是不可删除的</p>
<ul>
<li>feature/xxxx分支（用完可删）</li>
</ul>
<p>从develop创建的分支，一般是同期并行开发，但不同期上线时创建的分支，分支上的研发任务完</p>
<p>成后合并到develop分支，用完后可删除。</p>
<ul>
<li>hotfifix/xxxx分支，</li>
</ul>
<p>从master派生的分支，一般作为线上bug修复使用，修复测试完成后需要合并到master、test、develop分支。</p>
<ul>
<li>还有一些其他分支，在此不再详述，例如test分支（用于代码测试）、pre分支（预上线分支）等等。</li>
</ul>
]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>基础</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>学成在线Day04</title>
    <url>/2024/03/21/%E5%AD%A6%E6%88%90%E5%9C%A8%E7%BA%BFDay04/</url>
    <content><![CDATA[<h1 id="学成在线day04"><a class="markdownIt-Anchor" href="#学成在线day04"></a> 学成在线Day04</h1>
<h1 id="删除课程计划"><a class="markdownIt-Anchor" href="#删除课程计划"></a> 删除课程计划</h1>
<p>课程计划添加成功，如果课程还没有提交时可以删除课程计划。</p>
<p><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240214185143784.png" alt="image-20240214185143784"></p>
<ul>
<li>删除第一级别的章时要求章下边没有小节方可删除。</li>
<li>删除第二级别的小节的同时需要将其它关联的视频信息也删除。</li>
<li>删除课程计划需要传输课程计划的id。</li>
</ul>
<p>涉及多表删除需要开启事务</p>
<p>可以从IDEA数据库直接复制行的sql语句</p>
<p><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240214193321392.png" alt="image-20240214193321392"></p>
<p>修改圈中部分即可</p>
<h1 id="课程计划排序"><a class="markdownIt-Anchor" href="#课程计划排序"></a> 课程计划排序</h1>
<p><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240214200241048.png" alt="image-20240214200241048"></p>
<ul>
<li>上移表示将课程计划向上移动。</li>
<li>下移表示将课程计划向下移动。</li>
<li>向上移动表示和上边的课程计划交换位置，将两个课程计划的排序字段值交换。</li>
<li>向下移动表示和下边的课程计划交换位置，将两个课程计划的排序字段值交换。</li>
</ul>
<p>可以使用SQl语句一次完成</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--根据方向和ID修改顺序--&gt;</span><br><span class="line">    &lt;update id="updateOrderByDirectionAndId"&gt;</span><br><span class="line">        update teachplan T1,					# 先设置三个表用来更新和保存状态</span><br><span class="line">            teachplan T2,</span><br><span class="line">            &lt;if test="direction != null and direction == 'movedown'.toString()"&gt;</span><br><span class="line">                (SELECT id,orderby</span><br><span class="line">                 FROM teachplan T3</span><br><span class="line">                 WHERE T3.course_id = #{teachplan.courseId}						</span><br><span class="line">                 AND T3.orderby &gt; #{teachplan.orderby}					# 找到第一个比当前顺序大的行，和他的orderby进行就交换</span><br><span class="line">                 AND T3.parentid = #{teachplan.parentid}</span><br><span class="line">                 ORDER BY T3.orderby</span><br><span class="line">                 limit 1) T4</span><br><span class="line">            &lt;/if&gt;</span><br><span class="line">            &lt;if test="direction != null and direction == 'moveup'.toString()"&gt;</span><br><span class="line">                (SELECT id,orderby</span><br><span class="line">                 FROM teachplan T3</span><br><span class="line">                 WHERE T3.course_id = #{teachplan.courseId}</span><br><span class="line">                 AND T3.orderby &amp;lt; #{teachplan.orderby}				# 找到第一个比当前顺序小的行，和他的orderby进行就交换</span><br><span class="line">                 AND T3.parentid = #{teachplan.parentid}</span><br><span class="line">                 ORDER BY T3.orderby desc								# 注意此时是逆序</span><br><span class="line">                 limit 1) T4</span><br><span class="line">            &lt;/if&gt;</span><br><span class="line">        SET T2.orderby = T1.orderby,</span><br><span class="line">            T1.orderby = T2.orderby</span><br><span class="line">        where T1.parentid = T2.parentid</span><br><span class="line">          AND T1.course_id = T2.course_id</span><br><span class="line">          AND T1.parentid = #{teachplan.parentid}</span><br><span class="line">          AND T1.course_id = #{teachplan.courseId}</span><br><span class="line">          AND T1.orderby = #{teachplan.orderby}</span><br><span class="line">          AND T2.orderby = T4.orderby</span><br><span class="line">          AND T1.id != T4.id;											# 防止其再次更新自己，确保只更新目标的两行</span><br><span class="line">    &lt;/update&gt;</span><br></pre></td></tr></table></figure>
<h1 id="师资管理"><a class="markdownIt-Anchor" href="#师资管理"></a> 师资管理</h1>
<h2 id="课程教师查询"><a class="markdownIt-Anchor" href="#课程教师查询"></a> 课程教师查询</h2>
<p>调用mybatis-plus接口即可</p>
<h2 id="添加教师"><a class="markdownIt-Anchor" href="#添加教师"></a> 添加教师</h2>
<p>由于需要插入后返回数据，我们将Controller的返回类设置为CourseTeacher</p>
<p>当插入完成后，id字段会自动为插入实体类赋值</p>
<p>可以直接返回</p>
<h2 id="删除教师和修改教师"><a class="markdownIt-Anchor" href="#删除教师和修改教师"></a> 删除教师和修改教师</h2>
<p>基础增删查改</p>
<h1 id="课程删除"><a class="markdownIt-Anchor" href="#课程删除"></a> 课程删除</h1>
<p>涉及到的表比较多，需要细心处理</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>学习</tag>
        <tag>后端</tag>
        <tag>黑马程序员</tag>
        <tag>学成在线</tag>
      </tags>
  </entry>
  <entry>
    <title>学成在线Day01</title>
    <url>/2024/03/20/%E5%AD%A6%E6%88%90%E5%9C%A8%E7%BA%BFDay01/</url>
    <content><![CDATA[<h1 id="学成在线day01"><a class="markdownIt-Anchor" href="#学成在线day01"></a> 学成在线Day01</h1>
<h1 id="开发工具版本"><a class="markdownIt-Anchor" href="#开发工具版本"></a> 开发工具版本</h1>
<p><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240207192456061.png" alt="image-20240207192456061"></p>
<h1 id="环境搭建"><a class="markdownIt-Anchor" href="#环境搭建"></a> 环境搭建</h1>
<h2 id="搭建环境时遇到的问题"><a class="markdownIt-Anchor" href="#搭建环境时遇到的问题"></a> 搭建环境时遇到的问题</h2>
<table>
<thead>
<tr>
<th style="text-align:center"><strong>出现问题</strong></th>
<th style="text-align:center"><strong>解决方案</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">虚拟机启动后IP地址不对</td>
<td style="text-align:center">通过主机cmd的ipconfig指令查看正确虚拟机指令</td>
</tr>
<tr>
<td style="text-align:center">无法连接Mysql等服务</td>
<td style="text-align:center">应按照教程填写IP地址，不要自己发挥</td>
</tr>
<tr>
<td style="text-align:center">引入资料的maven依赖爆红显示找不到文件</td>
<td style="text-align:center">将<dependencymanagement>标签注释后加载完成后再取消注释即可</dependencymanagement></td>
</tr>
</tbody>
</table>
<h2 id="基础工程搭建"><a class="markdownIt-Anchor" href="#基础工程搭建"></a> 基础工程搭建</h2>
<h3 id="工程结构关系"><a class="markdownIt-Anchor" href="#工程结构关系"></a> 工程结构关系</h3>
<img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240318093529814.png" alt="image-20240318093529814" style="zoom:50%;">
<p>每一种类的工程都有不同的作用，下面是对其功能进行说明：</p>
<ul>
<li>
<p>父工程</p>
<ul>
<li>对依赖包的版本进行管理</li>
<li>本身为Pom工程，对子工程进行聚合管理</li>
</ul>
</li>
<li>
<p>基础工程</p>
<ul>
<li>继承父类工程</li>
<li>提供基础类库</li>
<li>提供工具类库</li>
</ul>
</li>
<li>
<p>微服务工程</p>
</li>
<li>
<p>分别从业务、技术方面划分模块，每个模块构建为一个微服务。</p>
</li>
</ul>
<h3 id="构建父工程"><a class="markdownIt-Anchor" href="#构建父工程"></a> 构建父工程</h3>
<p>父工程创建过程中记得<strong>组名</strong>,<strong>包名</strong>,<strong>工件</strong>不要填写错误</p>
<p>创建完成内部后仅保留pom.xml文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.xuecheng<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>xuecheng-plus-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>xuecheng-plus-parent<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>xuecheng-plus-parent<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-boot.version</span>&gt;</span>2.3.7.RELEASE<span class="tag">&lt;/<span class="name">spring-boot.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Hoxton.SR9<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">org.mapstruct.version</span>&gt;</span>1.3.1.Final<span class="tag">&lt;/<span class="name">org.mapstruct.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud-alibaba.version</span>&gt;</span>2.2.6.RELEASE<span class="tag">&lt;/<span class="name">spring-cloud-alibaba.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">org.projectlombok.version</span>&gt;</span>1.18.8<span class="tag">&lt;/<span class="name">org.projectlombok.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javax.servlet-api.version</span>&gt;</span>4.0.1<span class="tag">&lt;/<span class="name">javax.servlet-api.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">fastjson.version</span>&gt;</span>1.2.83<span class="tag">&lt;/<span class="name">fastjson.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">druid-spring-boot-starter.version</span>&gt;</span>1.2.8<span class="tag">&lt;/<span class="name">druid-spring-boot-starter.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mysql-connector-java.version</span>&gt;</span>8.0.30<span class="tag">&lt;/<span class="name">mysql-connector-java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mybatis-plus-boot-starter.version</span>&gt;</span>3.4.1<span class="tag">&lt;/<span class="name">mybatis-plus-boot-starter.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">commons-lang.version</span>&gt;</span>2.6<span class="tag">&lt;/<span class="name">commons-lang.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">minio.version</span>&gt;</span>8.4.3<span class="tag">&lt;/<span class="name">minio.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xxl-job-core.version</span>&gt;</span>2.3.1<span class="tag">&lt;/<span class="name">xxl-job-core.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">swagger-annotations.version</span>&gt;</span>1.5.20<span class="tag">&lt;/<span class="name">swagger-annotations.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">commons-lang3.version</span>&gt;</span>3.10<span class="tag">&lt;/<span class="name">commons-lang3.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">okhttp.version</span>&gt;</span>4.8.1<span class="tag">&lt;/<span class="name">okhttp.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">swagger-spring-boot-starter.version</span>&gt;</span>1.9.0.RELEASE<span class="tag">&lt;/<span class="name">swagger-spring-boot-starter.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">elasticsearch.version</span>&gt;</span>7.12.1<span class="tag">&lt;/<span class="name">elasticsearch.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>${spring-cloud.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>${spring-boot.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>${spring-cloud-alibaba.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- lombok，简化类的构建--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>${org.projectlombok.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- mapstruct 代码生成器，简化java bean之间的映射 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mapstruct<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapstruct-jdk8<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>${org.mapstruct.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mapstruct<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapstruct-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>${org.mapstruct.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.swagger<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>swagger-annotations<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>${swagger-annotations.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- Servlet 容器管理 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>${javax.servlet-api.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- fastjson ，json解析工具 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>${fastjson.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- druid 连接池管理 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>${druid-spring-boot-starter.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- mySQL数据库驱动包管理 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>${mysql-connector-java.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- mybatis plus 集成Spring Boot启动器 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>${mybatis-plus-boot-starter.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- mybatis plus 代码生成器 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>${mybatis-plus-boot-starter.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 工具类管理 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-lang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>${commons-lang.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 分布式文件系统 minIO的客户端API包 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.minio<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>minio<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>${minio.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--google推荐的一套工具类库--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.guava<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>guava<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>25.0-jre<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--分布式任务调度--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.xuxueli<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>xxl-job-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>${xxl-job-core.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--Spring boot单元测试--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>${spring-boot.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.squareup.okhttp3<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>okhttp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>${okhttp.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>${commons-lang3.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.spring4all<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>swagger-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>${swagger-spring-boot-starter.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.elasticsearch.client<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>elasticsearch-rest-high-level-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>${elasticsearch.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.elasticsearch<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>elasticsearch<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>${elasticsearch.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>${project.name}<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--编译打包过虑配置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--指定项目源码jdk的版本--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--指定项目编译后的jdk的版本--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--配置注解预编译--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">annotationProcessorPaths</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">path</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">version</span>&gt;</span>${org.projectlombok.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">annotationProcessorPaths</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!--责处理项目资源文件并拷贝到输出目录，如果有额外的资源文件目录则需要配置--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--使用默认分隔符，resource中可以使用分割符定义过虑的路径--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">useDefaultDelimiters</span>&gt;</span>true<span class="tag">&lt;/<span class="name">useDefaultDelimiters</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>最终情况如下</p>
<img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240318094358268.png" alt="image-20240318094358268" style="zoom:33%;">
<h3 id="构建基础工程"><a class="markdownIt-Anchor" href="#构建基础工程"></a> 构建基础工程</h3>
<p>父工程创建过程中记得<strong>组名</strong>,<strong>包名</strong>,<strong>工件</strong>不要填写错误</p>
<p>创建完成内部后仅保留pom.xml文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.xuecheng<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>xuecheng-plus-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>&gt;</span>../xuecheng-plus-parent<span class="tag">&lt;/<span class="name">relativePath</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>xuecheng-plus-base<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- fast Json --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- servlet Api 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 通用组件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-lang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-codec<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-codec<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.swagger<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>swagger-annotations<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-validation<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-log4j2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--根据扩展名取mimetype--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.j256.simplemagic<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>simplemagic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.zxing<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.zxing<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javase<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.module<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-module-parameter-names<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.datatype<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-datatype-jdk8<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.datatype<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-datatype-jsr310<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>最终情况如下:</p>
<img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240318094433486.png" alt="image-20240318094433486" style="zoom:50%;">
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>学习</tag>
        <tag>后端</tag>
        <tag>黑马程序员</tag>
        <tag>学成在线</tag>
      </tags>
  </entry>
  <entry>
    <title>学成在线Day02</title>
    <url>/2024/03/20/%E5%AD%A6%E6%88%90%E5%9C%A8%E7%BA%BFDay02/</url>
    <content><![CDATA[<h1 id="学成在线day02"><a class="markdownIt-Anchor" href="#学成在线day02"></a> 学成在线Day02</h1>
<h1 id="开发持久层"><a class="markdownIt-Anchor" href="#开发持久层"></a> 开发持久层</h1>
<p>在真实开发中，切记从底层向上层开发。例如项目应该先写持久层(mapper)再写业务层(service)</p>
<h1 id="分页查询测试代码"><a class="markdownIt-Anchor" href="#分页查询测试代码"></a> 分页查询测试代码</h1>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testCourseBaseMapper</span><span class="params">()</span>{</span><br><span class="line">    <span class="type">CourseBase</span> <span class="variable">courseBase</span> <span class="operator">=</span> courseBaseMapper.selectById(<span class="number">18</span>);</span><br><span class="line">    System.out.println(courseBase);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//拼装分页查询条件</span></span><br><span class="line">    <span class="type">QueryCourseParamsDto</span> <span class="variable">queryCourseParamsDto</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">QueryCourseParamsDto</span>();</span><br><span class="line">    queryCourseParamsDto.setCourseName(<span class="string">"java"</span>);<span class="comment">//课程名称为查询条件</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//封装查询条件</span></span><br><span class="line">    LambdaQueryWrapper&lt;CourseBase&gt; courseBaseLambdaQueryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">//根据课程名称模糊查询,sql为course_base.name like '%?%'</span></span><br><span class="line">    courseBaseLambdaQueryWrapper.like(StringUtils.isNotEmpty(queryCourseParamsDto.getCourseName()),</span><br><span class="line">                                      CourseBase::getName,</span><br><span class="line">                                      queryCourseParamsDto.getCourseName());</span><br><span class="line">    <span class="comment">//根据课程状态查询,sql为course_base.audit_status = ?</span></span><br><span class="line">    courseBaseLambdaQueryWrapper.like(StringUtils.isNotEmpty(queryCourseParamsDto.getAuditStatus()),</span><br><span class="line">                                      CourseBase::getAuditStatus,</span><br><span class="line">                                      queryCourseParamsDto.getAuditStatus());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建分页查询类</span></span><br><span class="line">    <span class="type">PageParams</span> <span class="variable">pageParams</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PageParams</span>(<span class="number">1L</span>,<span class="number">2L</span>);</span><br><span class="line">    <span class="comment">//创建分页对象,参数为当前页码,每页记录数</span></span><br><span class="line">    Page&lt;CourseBase&gt; page = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(pageParams.getPageNo(), pageParams.getPageSize());</span><br><span class="line">    <span class="comment">//获取分页查询结果</span></span><br><span class="line">    Page&lt;CourseBase&gt; courseBasePage = courseBaseMapper.selectPage(page, courseBaseLambdaQueryWrapper);</span><br><span class="line">    <span class="comment">//获取数据列表</span></span><br><span class="line">    List&lt;CourseBase&gt; records = courseBasePage.getRecords();</span><br><span class="line">    <span class="comment">//获取记录总数</span></span><br><span class="line">    <span class="type">Long</span> <span class="variable">total</span> <span class="operator">=</span> courseBasePage.getTotal();</span><br><span class="line"></span><br><span class="line">    PageResult&lt;CourseBase&gt; result = <span class="keyword">new</span> <span class="title class_">PageResult</span>&lt;&gt;(records,total,pageParams.getPageNo(), pageParams.getPageSize());</span><br><span class="line"></span><br><span class="line">    System.out.println(result);</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<p>本篇用到大量mybatis-plus内容,先去学习这块内容(2.11已学习完Mybatis-plus)</p>
<h3 id="利用http-client插件生成http请求"><a class="markdownIt-Anchor" href="#利用http-client插件生成http请求"></a> 利用Http Client插件生成http请求</h3>
<p>插件:</p>
<p><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240211163239135.png" alt="image-20240211163239135"></p>
<p>点击此处可以生成Http请求</p>
<p><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240211163338945.png" alt="image-20240211163338945"></p>
<p>例如分页查询的请求可以这么写</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">### 查询课程信息</span><br><span class="line">POST http://localhost:8080/course/list?pageNo=1&amp;pageSize=2</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/json</span><br><span class="line"></span><br><span class="line">{</span><br><span class="line">  "auditStatus": "202004",</span><br><span class="line">  "courseName": "java",</span><br><span class="line">  "publishStatus": ""</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<p>在项目根目录下建立文件夹统一存放请求测试</p>
<p><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240211163614502.png" alt="image-20240211163614502"></p>
<p>为了方便将来和网关集成测试，这里我们把测试主机地址在配置文件http-client.env.json 中配置<img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240211163817932.png" alt="image-20240211163817932"></p>
<p>注意要调用http-client.env.json文件内容需要将使用以下环境运行调整至dev<img src="C:%5CUsers%5CWwhds%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240211164035140.png" alt="image-20240211164035140"></p>
<h1 id="跨域三种解决方案"><a class="markdownIt-Anchor" href="#跨域三种解决方案"></a> 跨域三种解决方案</h1>
<p>在浏览器通过<a href="http://localhost:8601/%E5%9C%B0%E5%9D%80%E8%AE%BF%E9%97%AE%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E3%80%82">http://localhost:8601/地址访问前端工程。</a></p>
<p>chrome浏览器报错如下：</p>
<blockquote>
<p>Access to XMLHttpRequest at  ‘<a href="http://localhost:63110/system/dictionary/all">http://localhost:63110/system/dictionary/all</a>’ from origin  ‘<a href="http://localhost:8601">http://localhost:8601</a>’ has been blocked by CORS policy: No  ‘Access-Control-Allow-Origin’ header is present on the requested resource.</p>
</blockquote>
<p>Firefox浏览器报错如下：</p>
<blockquote>
<p>已拦截跨源请求：同源策略禁止读取位于 <a href="http://localhost:63110/system/dictionary/all">http://localhost:63110/system/dictionary/all</a> 的远程资源。（原因：CORS  头缺少 ‘Access-Control-Allow-Origin’）。状态码：200。</p>
</blockquote>
<p>提示：从http://localhost:8601访问<a href="http://localhost:63110/system/dictionary/all%E8%A2%ABCORS">http://localhost:63110/system/dictionary/all被CORS</a> policy阻止，因为没有Access-Control-Allow-Origin 头信息。CORS全称是 cross origin resource share 表示跨域资源共享。</p>
<p>出这个提示的原因是基于浏览器的同源策略，去判断是否跨域请求，同源策略是浏览器的一种安全机制，从一个地址请求另一个地址，如果协议、主机、端口三者全部一致则不属于跨域，否则有一个不一致就是跨域请求。</p>
<p>比如：</p>
<ul>
<li>
<p>从<a href="http://localhost:8601">http://localhost:8601</a> 到  <a href="http://localhost:8602">http://localhost:8602</a> 由于端口不同，是跨域。</p>
</li>
<li>
<p>从<a href="http://192.168.101.10:8601">http://192.168.101.10:8601</a> 到  <a href="http://192.168.101.11:8601">http://192.168.101.11:8601</a> 由于主机不同，是跨域。</p>
</li>
<li>
<p>从<a href="http://192.168.101.10:8601">http://192.168.101.10:8601</a> 到  <a href="https://192.168.101.11:8601">https://192.168.101.10:8601</a> 由于协议不同，是跨域。</p>
</li>
</ul>
<p>注意：服务器之间不存在跨域请求。</p>
<p>浏览器判断是跨域请求会在请求头上添加origin，表示这个请求来源哪里。</p>
<p>比如：</p>
<blockquote>
<p>GET / HTTP/1.1</p>
<p>Origin: <a href="http://localhost:8601">http://localhost:8601</a></p>
</blockquote>
<p>服务器收到请求判断这个Origin是否允许跨域，如果允许则在响应头中说明允许该来源的跨域请求，如下：</p>
<blockquote>
<p>Access-Control-Allow-Origin：<a href="http://localhost:8601">http://localhost:8601</a></p>
</blockquote>
<p>如果允许任何域名来源的跨域请求，则响应如下：</p>
<blockquote>
<p>Access-Control-Allow-Origin：*</p>
</blockquote>
<h3 id="第一种-json"><a class="markdownIt-Anchor" href="#第一种-json"></a> 第一种 JSON</h3>
<p>通过script标签的src属性进行跨域请求，如果服务端要响应内容则首先读取请求参数callback的值，callback是一个回调函数的名称，服务端读取callback的值后将响应内容通过调用callback函数的方式告诉请求方。如下图：</p>
<img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240318123843870.png" alt="image-20240318123843870" style="zoom:50%;">
<h3 id="第二种-添加响应头"><a class="markdownIt-Anchor" href="#第二种-添加响应头"></a> 第二种 添加响应头</h3>
<p>服务端在响应头添加 <code>Access-Control-Allow-Origin：*</code></p>
<h3 id="第三种-通过nginx代理跨域"><a class="markdownIt-Anchor" href="#第三种-通过nginx代理跨域"></a> 第三种 通过nginx代理跨域</h3>
<p>由于服务端之间没有跨域，浏览器通过nginx去访问跨域地址。</p>
<img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240318124740478.png" alt="image-20240318124740478" style="zoom:50%;">
<ol>
<li>
<p>浏览器先访问<a href="http://192.168.101.10:8601">http://192.168.101.10:8601</a> nginx提供的地址，进入页面</p>
</li>
<li>
<p>此页面要跨域访问<a href="http://192.168.101.11:8601">http://192.168.101.11:8601</a> ，不能直接跨域访问<a href="http://www.baidu.com:8601">http://www.baidu.com:8601</a> ，而是访问nginx的一个同源地址，比如：<a href="http://192.168.101.11:8601/api">http://192.168.101.11:8601/api</a> ，通过<a href="http://192.168.101.11:8601/api">http://192.168.101.11:8601/api</a> 的代理去访问<a href="http://www.baidu.com:8601">http://www.baidu.com:8601</a>。</p>
</li>
</ol>
<p>这样就实现了跨域访问。</p>
<p>浏览器到<a href="http://192.168.101.11:8601/api">http://192.168.101.11:8601/api</a> 没有跨域</p>
<p>nginx到http://www.baidu.com:8601通过服务端通信，没有跨域。</p>
<p><em><strong>本项目采用第二种方法解决跨域问题</strong></em></p>
<h1 id="前后端联调"><a class="markdownIt-Anchor" href="#前后端联调"></a> 前后端联调</h1>
<p>这里进行前后联调的目的是体会前后端联调的流程，测试的功能为课程查询功能。</p>
<p>1、启动前端工程，再启内容管理服务端。</p>
<p>2、修改服务端地址</p>
<p>前端默认连接的是项目的网关地址，由于现在网关工程还没有创建，这里需要更改前端工程的参数配置文件 ，修改网关地址为内容管理服务的地址。</p>
<p>启动前端工程，用前端访问后端接口，观察前端界面的数据是否正确。</p>
<h1 id="课程分类查询"><a class="markdownIt-Anchor" href="#课程分类查询"></a> 课程分类查询</h1>
<p>分类表中的数据为树形结构：</p>
<p><img src="C:%5CUsers%5CWwhds%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240211185359606.png" alt="image-20240211185359606"></p>
<h3 id="树形数据库查询"><a class="markdownIt-Anchor" href="#树形数据库查询"></a> 树形数据库查询</h3>
<h4 id="树层级确定"><a class="markdownIt-Anchor" href="#树层级确定"></a> 树层级确定</h4>
<p>课程分类表是一个树型结构，其中parentid字段为父结点ID，它是树型结构的标志字段。</p>
<p>如果树的层级固定可以使用表的自链接去查询，比如：我们只查询两级课程分类，可以用下边的SQL</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select *</span><br><span class="line">from course_category one</span><br><span class="line">         inner join course_category two on one.id = two.parentid</span><br><span class="line">where one.parentid = 1</span><br><span class="line">  and one.is_show = 1</span><br><span class="line">  and two.is_show = 1</span><br><span class="line">order by one.orderby, two.orderby;</span><br></pre></td></tr></table></figure>
<p>注意此时的order by 根据两个条件，其效果是先根据one.orderby排序,其内部排序结果再由two.orderby排序。</p>
<h4 id="树层级不确定"><a class="markdownIt-Anchor" href="#树层级不确定"></a> 树层级不确定</h4>
<p>此时可以使用MySQL递归实现，使用with语法，如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">WITH RECURSIVE cte_name (column_list) AS (</span><br><span class="line">    SELECT initial_query_result</span><br><span class="line">    UNION [ALL]</span><br><span class="line">    SELECT recursive_query</span><br><span class="line">    FROM cte_name</span><br><span class="line">    WHERE condition</span><br><span class="line">)</span><br><span class="line">SELECT * FROM cte_name;</span><br></pre></td></tr></table></figure>
<p>MySQL with Recursive语法详解</p>
<ol>
<li>
<p>WITH RECURSIVE：表示要使用递归查询的方式处理数据。</p>
</li>
<li>
<p>cte_name：给这个临时的递归表取个名字，可以在初始查询和递归查询中引用。</p>
</li>
<li>
<p>column_list：表示cte_name查询表中包含的列名，列名之间用逗号分隔。</p>
</li>
<li>
<p>initial_query_result：表示初始的查询结果，应该与column_list中的列名对应。</p>
</li>
<li>
<p>UNION：表示将两个查询结果集进行联合，使用UNION ALL则表示保留重复数据。</p>
</li>
<li>
<p>recursive_query：表示递归查询语句，应当与column_list中的列名对应。</p>
</li>
<li>
<p>condition：表示递归查询的终止条件，需要使用cte_name中的列进行判</p>
</li>
<li>
<p>SELECT * FROM cte_name：表示最终返回的查询结果集，可以通过cte_name查询表中的列名进行指定。</p>
</li>
</ol>
<p>下边是一个递归的简单例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">with RECURSIVE t1 AS   (    </span><br><span class="line">	SELECT 1 as n    </span><br><span class="line">	UNION ALL    </span><br><span class="line">	SELECT n + 1 FROM t1 WHERE n &lt; 5   </span><br><span class="line">)   </span><br><span class="line">SELECT * FROM t1;</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<p><img src="C:%5CUsers%5CWwhds%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240211193838531.png" alt="image-20240211193838531"></p>
<p>课程分类表层级固定查询sql:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select *</span><br><span class="line">from course_category one</span><br><span class="line">         inner join course_category two on one.id = two.parentid</span><br><span class="line">where one.parentid = 1</span><br><span class="line">  and one.is_show = 1</span><br><span class="line">  and two.is_show = 1</span><br><span class="line">order by one.orderby, two.orderby;</span><br></pre></td></tr></table></figure>
<p>课程分类表层级不固定查询sql:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">with recursive t1 as (</span><br><span class="line">    select * from course_category where id = '1'</span><br><span class="line">    union all</span><br><span class="line">    select t2.* from course_category t2 inner join t1 on t2.parentid = t1.id</span><br><span class="line">)</span><br><span class="line">select * from t1 order by t1.id;</span><br></pre></td></tr></table></figure>
<p>以上是我们研究了树型表的查询方法，通过递归的方式查询课程分类比较灵活，因为它可以不限制层级。</p>
<p>mysql为了避免无限递归默认递归次数为1000，可以通过设置cte_max_recursion_depth参数增加递归深度，还可以通过max_execution_time限制执行时间，超过此时间也会终止递归操作。</p>
<p>mysql递归相当于在存储过程中执行若干次sql语句，java程序仅与数据库建立一次链接执行递归操作，所以只要控制好递归深度，控制好数据量性能就没有问题。</p>
<p>思考：如果java程序在递归操作中连接数据库去查询数据组装数据，这个性能高吗？</p>
<p>答：若在mysql中执行递归查询，java与数据库只用连接一次。若在java中使用递归查询则会连接多次，浪费性能。</p>
<h3 id="service层处理"><a class="markdownIt-Anchor" href="#service层处理"></a> service层处理</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> List&lt;CourseCategoryDTO&gt; <span class="title function_">queryTreeNodes</span><span class="params">(String id)</span> {</span><br><span class="line">    <span class="comment">//调用mapper查询分类信息</span></span><br><span class="line">    List&lt;CourseCategoryDTO&gt; courseCategoryDTOS = courseCategoryMapper.selectTreeNodes(id);</span><br><span class="line">    <span class="comment">//封装成list类型返回</span></span><br><span class="line">    <span class="comment">//将list转换成map,key为id,value为CourseCategoryDTO</span></span><br><span class="line">    Map&lt;String, CourseCategoryDTO&gt; map = courseCategoryDTOS.stream()</span><br><span class="line">        .collect(Collectors.toMap(CourseCategory::getId, value -&gt; value, (key1, key2) -&gt; key2));</span><br><span class="line">    <span class="comment">//遍历list,查找collect子节点</span></span><br><span class="line">    List&lt;CourseCategoryDTO&gt; result = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    courseCategoryDTOS.stream().filter(item -&gt; !id.equals(item.getId())) <span class="comment">//去除根节点</span></span><br><span class="line">        .forEach(item -&gt; {</span><br><span class="line">            <span class="keyword">if</span> ( item.getParentid().equals(id) ) {</span><br><span class="line">                result.add(item);</span><br><span class="line">            }</span><br><span class="line">            <span class="type">CourseCategoryDTO</span> <span class="variable">courseCategoryDTO</span> <span class="operator">=</span> map.get(item.getParentid());</span><br><span class="line">            <span class="comment">//父节点属于要要找的节点则此时会在map中,若不是要找的节点则会被filter过滤</span></span><br><span class="line">            <span class="keyword">if</span> ( courseCategoryDTO != <span class="literal">null</span> ) {</span><br><span class="line">                <span class="comment">//如果该父节点的子节点集合为空,设置一个新的集合</span></span><br><span class="line">                <span class="keyword">if</span> ( courseCategoryDTO.getChildrenTreeNodes() == <span class="literal">null</span> ) {</span><br><span class="line">                    courseCategoryDTO.setChildrenTreeNodes(<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;());</span><br><span class="line">                }</span><br><span class="line">                courseCategoryDTO.getChildrenTreeNodes().add(item);</span><br><span class="line">            }</span><br><span class="line">        });</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<h1 id="新增课程"><a class="markdownIt-Anchor" href="#新增课程"></a> 新增课程</h1>
<p>注意涉及到增删改查记得要添加**@Transactional**注解</p>
<p>注意当事务回滚时ID仍然自增，因为innodb的auto_increament的计数器记录的当前值是保存在存内 存中的，并不是存在于磁盘上，当mysql server处于运行的时候，这个计数值只会随着 insert 改增长，不会随着delete而减少。</p>
<p>所以最后要在courseMarket设置ID，而不是直接插入</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> CourseBaseInfoDTO <span class="title function_">createCourseBaseInfo</span><span class="params">(Long companyId, AddCourseDTO addcourseDTO)</span> {</span><br><span class="line">    <span class="comment">//合法性校验</span></span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isBlank(addcourseDTO.getName())) {</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">"课程名称为空"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isBlank(addcourseDTO.getMt())) {</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">"课程分类为空"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isBlank(addcourseDTO.getSt())) {</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">"课程分类为空"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isBlank(addcourseDTO.getGrade())) {</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">"课程等级为空"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isBlank(addcourseDTO.getTeachmode())) {</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">"教育模式为空"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isBlank(addcourseDTO.getUsers())) {</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">"适应人群为空"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isBlank(addcourseDTO.getCharge())) {</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">"收费规则为空"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1.向课程信息表(course_Base)写入信息</span></span><br><span class="line">    <span class="type">CourseBase</span> <span class="variable">courseBase</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CourseBase</span>();</span><br><span class="line">    BeanUtils.copyProperties(addcourseDTO,courseBase);</span><br><span class="line">    courseBase.setCompanyId(companyId);</span><br><span class="line">    courseBase.setCreateDate(LocalDateTime.now());</span><br><span class="line">    <span class="comment">//审核状态默认未提交</span></span><br><span class="line">    courseBase.setAuditStatus(<span class="string">"202002"</span>);</span><br><span class="line">    <span class="comment">//发布状态为未发布</span></span><br><span class="line">    courseBase.setStatus(<span class="string">"203001"</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">insert</span> <span class="operator">=</span> courseBaseMapper.insert(courseBase);</span><br><span class="line">    <span class="keyword">if</span>(insert &lt;= <span class="number">0</span>){</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">"添加课程失败"</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//2.向课程营销表(course_market)写入信息</span></span><br><span class="line">    <span class="comment">//课程营销信息</span></span><br><span class="line">    <span class="type">CourseMarket</span> <span class="variable">courseMarket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CourseMarket</span>();</span><br><span class="line">    <span class="type">Long</span> <span class="variable">courseId</span> <span class="operator">=</span> courseBase.getId();</span><br><span class="line">    BeanUtils.copyProperties(addcourseDTO,courseMarket);</span><br><span class="line">    courseMarket.setId(courseId);</span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> saveCourseMarket(courseMarket);</span><br><span class="line">    <span class="keyword">if</span>(i&lt;=<span class="number">0</span>){</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">"保存课程营销信息失败"</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//查询课程基本信息及营销信息并返回</span></span><br><span class="line">    <span class="keyword">return</span> getCourseBaseInfo(courseId);</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<h1 id="异常处理"><a class="markdownIt-Anchor" href="#异常处理"></a> 异常处理</h1>
<p>异常处理方法用的三个注解:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ResponseBody</span>									  <span class="comment">//将java对象转换成json格式</span></span><br><span class="line"><span class="meta">@ExceptionHandler(XueChengPlusException.class)</span>    <span class="comment">//利用字节码文件捕获对应异常</span></span><br><span class="line"><span class="meta">@ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR)</span> <span class="comment">//设置响应码</span></span><br></pre></td></tr></table></figure>
<p>注意到类上用了</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ControllerAdvice</span></span><br></pre></td></tr></table></figure>
<p>我们可以使用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestControllerAdvice</span></span><br></pre></td></tr></table></figure>
<p>@RestControllerAdvice注解包含了@ControllerAdvice注解和@ResponseBody注解</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>学习</tag>
        <tag>后端</tag>
        <tag>黑马程序员</tag>
        <tag>学成在线</tag>
      </tags>
  </entry>
  <entry>
    <title>学成在线Day03</title>
    <url>/2024/03/20/%E5%AD%A6%E6%88%90%E5%9C%A8%E7%BA%BFDay03/</url>
    <content><![CDATA[<h1 id="学成在线day03"><a class="markdownIt-Anchor" href="#学成在线day03"></a> 学成在线Day03</h1>
<h1 id="jsr303校验"><a class="markdownIt-Anchor" href="#jsr303校验"></a> JSR303校验</h1>
<h3 id="统一校验实现"><a class="markdownIt-Anchor" href="#统一校验实现"></a> 统一校验实现</h3>
<p>首先在Base工程添加spring-boot-starter-validation的依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span>       </span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>      </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-validation<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>   </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>  </span><br></pre></td></tr></table></figure>
<p>在javax.validation.constraints包下有很多这样的校验注解，直接使用注解定义校验规则即可。</p>
<p>之后我们在数据传输类的属性直接添加注解即可，例如：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@NotEmpty(message = "课程名称不能为空")</span></span><br><span class="line"><span class="meta">@ApiModelProperty(value = "课程名称", required = true)</span></span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line"><span class="meta">@NotEmpty(message = "适用人群不能为空")</span></span><br><span class="line"><span class="meta">@Size(message = "适用人群内容过少", min = 10)</span></span><br><span class="line"><span class="meta">@ApiModelProperty(value = "适用人群", required = true)</span></span><br><span class="line"><span class="keyword">private</span> String users;</span><br></pre></td></tr></table></figure>
<h3 id="分组校验"><a class="markdownIt-Anchor" href="#分组校验"></a> <strong>分组校验</strong></h3>
<p>有时候在同一个属性上设置一个校验规则不能满足要求，比如：订单编号由系统生成，在添加订单时要求订单编号为空，在更新 订单时要求订单编写不能为空。此时就用到了分组校验，同一个属性定义多个校验规则属于不同的分组，比如：添加订单定义@NULL规则属于insert分组，更新订单定义@NotEmpty规则属于update分组，insert和update是分组的名称，是可以修改的。</p>
<p>下边举例说明</p>
<p>我们用class类型来表示不同的分组，所以我们定义不同的接口类型（空接口）表示不同的分组，由于校验分组是公用的，所以定义在 base工程中。如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ValidationGroups</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Inster</span>{};</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Update</span>{};</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Delete</span>{};</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<p>在校验规则的时候分组</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@NotEmpty(groups = {ValidationGroups.Inster.class},message = "添加课程名称不能为空")</span></span><br><span class="line"><span class="meta">@NotEmpty(groups = {ValidationGroups.Update.class},message = "修改课程名称不能为空")</span></span><br><span class="line"><span class="comment">// @NotEmpty(message = "课程名称不能为空")</span></span><br><span class="line"><span class="meta">@ApiModelProperty(value = "课程名称", required = true)</span></span><br><span class="line"><span class="keyword">private</span> String name;</span><br></pre></td></tr></table></figure>
<h1 id="修改课程"><a class="markdownIt-Anchor" href="#修改课程"></a> 修改课程</h1>
<p>第一步我们需要获取课程信息</p>
<p>我们可以让前端回显分页查询数据</p>
<p>或者利用后端Api查询</p>
<p>这里我们选择后端Api查询</p>
<h1 id="课程计划查询"><a class="markdownIt-Anchor" href="#课程计划查询"></a> 课程计划查询</h1>
<p>常规开发,查询类似课程分类查询</p>
<p>由于层级固定，采用自连接查询</p>
<p>由于返回时数据并非符合要求，所以在select标签内使用resultMap来映射</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"treeNodeResultMap"</span> <span class="attr">type</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectTreeNodes"</span> <span class="attr">resultMap</span>=<span class="string">"treeNodeResultMap"</span> <span class="attr">parameterType</span>=<span class="string">"java.lang.Long"</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>注意collection中嵌套了association标签，移出去防止爆红</p>
<p>查询语句用到了</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span>&gt;</span> <span class="tag">&lt;<span class="name">association</span>&gt;</span> <span class="tag">&lt;<span class="name">collection</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>详细内容可以查看<a href="https://zhuanlan.zhihu.com/p/572129887">MyBatis之ResultMap的association和collection标签详解 - 知乎 (zhihu.com)</a>学习</p>
<p>查询语句如下</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"treeNodeResultMap"</span> <span class="attr">type</span>=<span class="string">"com.xuecheng.content.model.dto.TeachplanDTO"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 一级数据映射 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>     <span class="attr">column</span>=<span class="string">"one_id"</span>        <span class="attr">property</span>=<span class="string">"id"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"one_pname"</span>      <span class="attr">property</span>=<span class="string">"pname"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"one_parentid"</span>     <span class="attr">property</span>=<span class="string">"parentid"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"one_grade"</span>  <span class="attr">property</span>=<span class="string">"grade"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"one_mediaType"</span>   <span class="attr">property</span>=<span class="string">"mediaType"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"one_stratTime"</span>   <span class="attr">property</span>=<span class="string">"startTime"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"one_endTime"</span>   <span class="attr">property</span>=<span class="string">"endTime"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"one_orderby"</span>   <span class="attr">property</span>=<span class="string">"orderby"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"one_courseId"</span>   <span class="attr">property</span>=<span class="string">"courseId"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"one_coursePubId"</span>   <span class="attr">property</span>=<span class="string">"coursePubId"</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 一级中包含多个二级数据 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"teachPlanTreeNodes"</span> <span class="attr">ofType</span>=<span class="string">"com.xuecheng.content.model.dto.TeachplanDTO"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 二级数据映射 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>     <span class="attr">column</span>=<span class="string">"two_id"</span>        <span class="attr">property</span>=<span class="string">"id"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"two_pname"</span>      <span class="attr">property</span>=<span class="string">"pname"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"two_parentid"</span>     <span class="attr">property</span>=<span class="string">"parentid"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"two_grade"</span>  <span class="attr">property</span>=<span class="string">"grade"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"two_mediaType"</span>   <span class="attr">property</span>=<span class="string">"mediaType"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"two_stratTime"</span>   <span class="attr">property</span>=<span class="string">"startTime"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"two_endTime"</span>   <span class="attr">property</span>=<span class="string">"endTime"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"two_orderby"</span>   <span class="attr">property</span>=<span class="string">"orderby"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"two_courseId"</span>   <span class="attr">property</span>=<span class="string">"courseId"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"two_coursePubId"</span>   <span class="attr">property</span>=<span class="string">"coursePubId"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"teachplanMedia"</span> <span class="attr">javaType</span>=<span class="string">"com.xuecheng.content.model.po.TeachplanMedia"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"teachplanMeidaId"</span>   <span class="attr">property</span>=<span class="string">"id"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"mediaFilename"</span>   <span class="attr">property</span>=<span class="string">"mediaFilename"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"mediaId"</span>   <span class="attr">property</span>=<span class="string">"mediaId"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="新增修改课程计划"><a class="markdownIt-Anchor" href="#新增修改课程计划"></a> 新增修改课程计划</h1>
<p>我们用一个SaveTeachPlanDTO类即可完成新增和修改相关操作，减少了操作量，提高了代码复用率</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SaveTeachPlanDTO</span> {</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String pname;</span><br><span class="line">    <span class="keyword">private</span> Long parentid;</span><br><span class="line">    <span class="keyword">private</span> Integer grade;</span><br><span class="line">    <span class="keyword">private</span> String mediaType;</span><br><span class="line">    <span class="keyword">private</span> Long courseId;</span><br><span class="line">    <span class="keyword">private</span> Long coursePubId;</span><br><span class="line">    <span class="keyword">private</span> String isPreview;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<p>当我们需要确定插入数据的orderBy时，我们可以通过统计同类课程的数量并将其+1即可</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> Integer <span class="title function_">getTeachPlanCount</span><span class="params">(Long courseId,Long parentId)</span>{</span><br><span class="line">        LambdaQueryWrapper&lt;Teachplan&gt; lambdaQueryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">        lambdaQueryWrapper.eq(Teachplan::getCourseId,courseId);</span><br><span class="line">        lambdaQueryWrapper.eq(Teachplan::getParentid,parentId);</span><br><span class="line">        <span class="comment">//计算个数</span></span><br><span class="line">        <span class="keyword">return</span> teachplanMapper.selectCount(lambdaQueryWrapper);</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<p>注意当我们添加大章节时前端不显示，我们需要把sql语句中的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from teachplan one</span><br><span class="line">     inner join teachplan two on two.parentid = one.id</span><br><span class="line">     left join teachplan_media m1 on m1.teachplan_id = two.id</span><br></pre></td></tr></table></figure>
<p>改为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from teachplan one</span><br><span class="line">     left join teachplan two on two.parentid = one.id</span><br><span class="line">     left join teachplan_media m1 on m1.teachplan_id = two.id</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>学习</tag>
        <tag>后端</tag>
        <tag>黑马程序员</tag>
        <tag>学成在线</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown语法快速入门</title>
    <url>/2024/03/18/Markdown%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h1 id="1-markdown标题语法"><a class="markdownIt-Anchor" href="#1-markdown标题语法"></a> 1 Markdown标题语法</h1>
<p>创建标题需要在单词或短语面前添加(#),#号数量代表标题级别,最多添加6个#</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br></pre></td></tr></table></figure>
<h1 id="11-一级标题"><a class="markdownIt-Anchor" href="#11-一级标题"></a> 1.1 一级标题</h1>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">## 二级标题</span></span><br></pre></td></tr></table></figure>
<h2 id="12-二级标题markdown"><a class="markdownIt-Anchor" href="#12-二级标题markdown"></a> 1.2 二级标题markdown</h2>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">##  三级标题</span></span><br></pre></td></tr></table></figure>
<h3 id="13-三级标题"><a class="markdownIt-Anchor" href="#13-三级标题"></a> 1.3 三级标题</h3>
<p>不同的 Markdown 应用程序处理 <code>#</code> 和标题之间的空格方式并不一致。为了兼容考虑，请用一个空格在 <code>#</code> 和标题之间进行分隔。</p>
<table>
<thead>
<tr>
<th style="text-align:center">✅</th>
<th style="text-align:center">❌</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code># 标题</code></td>
<td style="text-align:center"><code>#标题</code></td>
</tr>
</tbody>
</table>
<p>Typora快捷键: Crtl + 1-6</p>
<h1 id="2-markdown-段落语法"><a class="markdownIt-Anchor" href="#2-markdown-段落语法"></a> 2 Markdown 段落语法</h1>
<p>要创建段落，请使用空白行将一行或多行文本进行分隔。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">这是第一段的段落</span><br><span class="line">这是第二段的段落</span><br></pre></td></tr></table></figure>
<p><strong>请不要在段落面前加入空格或者制表符(TAB)</strong></p>
<h1 id="3-markdown-换行语法"><a class="markdownIt-Anchor" href="#3-markdown-换行语法"></a> 3 Markdown 换行语法</h1>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">按下回车即可换行</span><br><span class="line">就像这样😀</span><br></pre></td></tr></table></figure>
<h1 id="4-markdown强调语法"><a class="markdownIt-Anchor" href="#4-markdown强调语法"></a> 4 Markdown强调语法</h1>
<p>通过将文本设置为粗体或斜体来强调其重要性。</p>
<h2 id="41-粗体bold"><a class="markdownIt-Anchor" href="#41-粗体bold"></a> 4.1 粗体(<code>Bold</code>)</h2>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="strong">**这是粗体语法**</span></span><br></pre></td></tr></table></figure>
<p><strong>这是粗体语法</strong></p>
<p>Typora快捷键: Crtl + B</p>
<h2 id="42-斜体italic"><a class="markdownIt-Anchor" href="#42-斜体italic"></a> 4.2 斜体(<code>Italic</code>)</h2>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="emphasis">*这是斜体语法*</span></span><br></pre></td></tr></table></figure>
<p><em>这是斜体语法</em></p>
<p>Typora快捷键: Crtl + I</p>
<h2 id="43-粗体bold和斜体italic"><a class="markdownIt-Anchor" href="#43-粗体bold和斜体italic"></a> 4.3 粗体(<code>Bold</code>)和斜体(<code>Italic</code>)</h2>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="strong">**<span class="emphasis">*这是粗体和斜体同时作用*</span>**</span></span><br></pre></td></tr></table></figure>
<p><em><strong>这是粗体和斜体同时作用</strong></em></p>
<p>Typora快捷键: Crtl + I + B</p>
<h2 id="44-删除线strikethrough"><a class="markdownIt-Anchor" href="#44-删除线strikethrough"></a> 4.4 删除线(<code>strikethrough</code>)</h2>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">~~这是删除线~~</span><br></pre></td></tr></table></figure>
<p><s>这是删除线</s></p>
<h1 id="5-markdown-引用语法"><a class="markdownIt-Anchor" href="#5-markdown-引用语法"></a> 5 Markdown 引用语法</h1>
<p>要创建块引用，请在段落前添加一个 <code>&gt;</code> 符号。</p>
<h2 id="51-单行引用"><a class="markdownIt-Anchor" href="#51-单行引用"></a> 5.1 单行引用</h2>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&gt;这就是单行引用</span><br></pre></td></tr></table></figure>
<blockquote>
<p>这就是单行引用</p>
</blockquote>
<h2 id="52-多个段落的块引用"><a class="markdownIt-Anchor" href="#52-多个段落的块引用"></a> 5.2 多个段落的块引用</h2>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&gt;第一行引用</span><br><span class="line"><span class="quote">&gt;</span></span><br><span class="line"><span class="quote">&gt;</span></span><br><span class="line"><span class="quote">&gt;</span></span><br><span class="line"><span class="quote">&gt;第二行引用</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>第一行引用</p>
<p>第二行引用</p>
</blockquote>
<h2 id="53-嵌套块引用"><a class="markdownIt-Anchor" href="#53-嵌套块引用"></a> 5.3 嵌套块引用</h2>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt;</span></span><br><span class="line"><span class="quote">&gt;</span></span><br><span class="line">&gt;&gt;这是外层引用</span><br><span class="line">&gt;&gt;这是第一行内层引用</span><br><span class="line">&gt;&gt;这是第二行内层引用</span><br></pre></td></tr></table></figure>
<blockquote>
<p>这是外层引用</p>
<blockquote>
<p>这是第一行内层引用</p>
<p>这是第二行内层引用</p>
</blockquote>
</blockquote>
<h2 id="54-带有其他元素的引用"><a class="markdownIt-Anchor" href="#54-带有其他元素的引用"></a> 5.4 带有其他元素的引用</h2>
<blockquote>
<h2 id="效果看起来很不错"><a class="markdownIt-Anchor" href="#效果看起来很不错"></a> # 效果看起来很不错!</h2>
<ul>
<li>这是无序列表第一行!</li>
<li>这是无序列表第二行!</li>
</ul>
<p><em><strong>效果如同我们想象的那样出现</strong></em></p>
</blockquote>
<h1 id="6-markdown-列表语法"><a class="markdownIt-Anchor" href="#6-markdown-列表语法"></a> 6 Markdown 列表语法</h1>
<p>可以将多个条目组织成有序或无序列表。</p>
<h2 id="61-有序列表"><a class="markdownIt-Anchor" href="#61-有序列表"></a> 6.1 有序列表</h2>
<p>要创建有序列表，请在每个列表项前添加数字并紧跟一个英文句点。数字不必按数学顺序排列，但是列表应当以数字 1 起始。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span> 第一件物品</span><br><span class="line"><span class="bullet">2.</span> 第二件物品</span><br><span class="line"><span class="bullet">3.</span> 第三件物品</span><br><span class="line"><span class="bullet">4.</span> LOLOLOLOL</span><br></pre></td></tr></table></figure>
<ol>
<li>
<p>第一件物品</p>
</li>
<li>
<p>第二件物品</p>
</li>
<li>
<p>第三件物品</p>
</li>
<li>
<p>LOLOLOLOL</p>
</li>
</ol>
<p>Typora快捷键: Crtl + Shift + [</p>
<p>即使你在定义时数字并非从1开始，列表显示时也会正常工作，效果如下</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span> 第一件物品</span><br><span class="line"><span class="bullet">1.</span> 第二件物品</span><br><span class="line"><span class="bullet">1.</span> 第三件物品</span><br><span class="line"><span class="bullet">1.</span> LOLOLOLOL</span><br></pre></td></tr></table></figure>
<ol>
<li>第一件物品</li>
<li>第二件物品</li>
<li>第三件物品</li>
<li>LOLOLOLOL</li>
</ol>
<h2 id="62-无序列表"><a class="markdownIt-Anchor" href="#62-无序列表"></a> 6.2 无序列表</h2>
<p>要创建无序列表，请在每个列表项前面添加破折号 (-)、星号 (*) 或加号 (+) 。缩进一个或多个列表项可创建嵌套列表。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> 第一件物品</span><br><span class="line"><span class="bullet">-</span> 第二件物品</span><br><span class="line"><span class="bullet">-</span> 第三件没了</span><br><span class="line"><span class="bullet">-</span> 再看一下上一行</span><br></pre></td></tr></table></figure>
<ul>
<li>第一件物品</li>
<li>第二件物品</li>
<li>第三件没了</li>
<li>再看一下上一行</li>
</ul>
<p>Typora快捷键: Crtl + Shift + ]</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">无序列表四种符号均可使用</span><br><span class="line">但是不能混用,例如:</span><br><span class="line"><span class="bullet">-</span> 第一件物品</span><br><span class="line"><span class="bullet">+</span> 第二件物品</span><br><span class="line"><span class="bullet">-</span> 第三件没了</span><br><span class="line"><span class="bullet">*</span> 再看一下上一行</span><br></pre></td></tr></table></figure>
<h2 id="63-在列表中嵌套其他元素"><a class="markdownIt-Anchor" href="#63-在列表中嵌套其他元素"></a> 6.3 在列表中嵌套其他元素</h2>
<p>要在保留列表连续性的同时在列表中添加另一种元素，请将该元素缩进四个空格或一个制表符，如下例所示</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">*</span>   This is the first list item.</span><br><span class="line"><span class="bullet">*</span>   Here's the second list item.</span><br><span class="line"></span><br><span class="line"><span class="code">    &gt; I need to add another paragraph below the second list item.</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">*</span>   And here's the third list item.</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>This is the first list item.</p>
</li>
<li>
<p>Here’s the second list item.</p>
<blockquote>
<p>I need to add another paragraph below the second list item.</p>
</blockquote>
</li>
<li>
<p>And here’s the third list item.</p>
</li>
</ul>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span>   This is the first list item.</span><br><span class="line"><span class="bullet">2.</span>   Here's the second list item.</span><br><span class="line"><span class="code">	</span></span><br><span class="line"><span class="code">	- 拦腰截断！</span></span><br><span class="line"><span class="code">	- 再接回去！</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">3.</span>   And here's the third list item.</span><br></pre></td></tr></table></figure>
<ol>
<li>
<p>This is the first list item.</p>
</li>
<li>
<p>Here’s the second list item.</p>
<ul>
<li>拦腰截断！</li>
<li>再接回去！</li>
</ul>
</li>
<li>
<p>And here’s the third list item.</p>
</li>
</ol>
<h1 id="7-markdown-代码语法"><a class="markdownIt-Anchor" href="#7-markdown-代码语法"></a> 7 Markdown 代码语法</h1>
<h2 id="71-转义反引号"><a class="markdownIt-Anchor" href="#71-转义反引号"></a> 7.1 转义反引号</h2>
<p>要将单词或短语表示为代码，请将其包裹在反引号 (`) 中。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">一句话里面掺一些<span class="code">`代码`</span></span><br></pre></td></tr></table></figure>
<p>一句话里面掺一些<code>代码</code></p>
<p>如果你要表示为代码的单词或短语中包含一个或多个反引号，则可以通过将单词或短语包裹在双反引号(````)中。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="code">``Use `</span>code<span class="code">` in your Markdown file.`</span>`</span><br></pre></td></tr></table></figure>
<p><code>Use `code` in your Markdown file.</code></p>
<p>Typora快捷键: Crtl + Shift + Q</p>
<h2 id="72-围栏式代码块"><a class="markdownIt-Anchor" href="#72-围栏式代码块"></a> 7.2 围栏式代码块</h2>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="code">```json</span></span><br><span class="line"><span class="code">{</span></span><br><span class="line"><span class="code">  "firstName": "John",</span></span><br><span class="line"><span class="code">  "lastName": "Smith",</span></span><br><span class="line"><span class="code">  "age": 25</span></span><br><span class="line"><span class="code">}</span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></table></figure>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">{</span></span><br><span class="line">  <span class="attr">"firstName"</span><span class="punctuation">:</span> <span class="string">"John"</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">"lastName"</span><span class="punctuation">:</span> <span class="string">"Smith"</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">"age"</span><span class="punctuation">:</span> <span class="number">25</span></span><br><span class="line"><span class="punctuation">}</span></span><br></pre></td></tr></table></figure>
<h1 id="8-markdown-分隔线语法"><a class="markdownIt-Anchor" href="#8-markdown-分隔线语法"></a> 8 Markdown 分隔线语法</h1>
<p>要创建分隔线，请在单独一行上使用三个或多个星号 (<code>***</code>)、破折号 (<code>---</code>) 或下划线 (<code>___</code>) ，并且不能包含其他内容。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"><span class="strong">***</span></span></span><br><span class="line"><span class="strong"><span class="section">---</span></span></span><br><span class="line"><span class="strong"><span class="section">________<span class="emphasis">_</span></span></span></span><br></pre></td></tr></table></figure>
<hr>
<hr>
<hr>
<p>为了兼容性，请在分隔线的前后均添加空白行。</p>
<table>
<thead>
<tr>
<th style="text-align:center">✅</th>
<th style="text-align:center">❌</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">Try to put a blank line before…<br><br>—<br><br>…and after a horizontal rule.</td>
<td style="text-align:center">Without blank lines, this would be a heading.<br>-–<br>Don’t do this!</td>
</tr>
</tbody>
</table>
<h1 id="9-markdown-链接语法"><a class="markdownIt-Anchor" href="#9-markdown-链接语法"></a> 9 Markdown 链接语法</h1>
<h2 id="91-标准链接语法"><a class="markdownIt-Anchor" href="#91-标准链接语法"></a> 9.1 标准链接语法</h2>
<p>链接文本放在中括号内，链接地址放在后面的括号中，链接title可选。</p>
<p>超链接Markdown语法代码：<code>[超链接显示名](超链接地址 "超链接title")</code></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">不懂就去问百度</span>](<span class="link">http://www.baidu.com</span>)</span><br></pre></td></tr></table></figure>
<p><a href="http://www.baidu.com">不懂就去问百度</a></p>
<h2 id="92-带title的链接语法"><a class="markdownIt-Anchor" href="#92-带title的链接语法"></a> 9.2 带title的链接语法</h2>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">不懂就去问百度</span>](<span class="link">http://www.baidu.com "这是百度哦😙"</span>)</span><br></pre></td></tr></table></figure>
<p><a href="http://www.baidu.com" title="这是百度哦😙">不懂就去问百度</a></p>
<h2 id="93-网址和email地址"><a class="markdownIt-Anchor" href="#93-网址和email地址"></a> 9.3 网址和Email地址</h2>
<p>使用尖括号可以很方便地把URL或者email地址变成可点击的链接。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">www.bilibili.com</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&lt;892920290@qq.com&gt;</span><br></pre></td></tr></table></figure>
<p>&lt;<a href="http://www.bilibili.com">www.bilibili.com</a>&gt;</p>
<p><a href="mailto:892920290@qq.com">892920290@qq.com</a></p>
<h2 id="94-带格式化的链接"><a class="markdownIt-Anchor" href="#94-带格式化的链接"></a> 9.4 带格式化的链接</h2>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">I love supporting the <span class="strong">**[<span class="string">EFF</span>](<span class="link">https://eff.org</span>)**</span>.</span><br><span class="line">This is the <span class="emphasis">*[<span class="string">Markdown Guide</span>](<span class="link">https://www.markdownguide.org</span>)*</span>.</span><br><span class="line">See the section on [<span class="string">`code`</span>](<span class="link">#code</span>).</span><br></pre></td></tr></table></figure>
<p>I love supporting the <strong><a href="https://eff.org">EFF</a></strong>.<br>
This is the <em><a href="https://www.markdownguide.org">Markdown Guide</a></em>.<br>
See the section on <a href="#code"><code>code</code></a>.</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="symbol">百度</span>]: <span class="link">http://www.baidu.com "芝士百度"</span></span><br></pre></td></tr></table></figure>
<p>不懂就问[芝士百度][百度]</p>
<p>不同的 Markdown 应用程序处理URL中间的空格方式不一样。为了兼容性，请尽量使用%20代替空格。</p>
<table>
<thead>
<tr>
<th>✅ Do this</th>
<th>❌ Don’t do this</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>[link](https://www.example.com/my%20great%20page)</code></td>
<td><code>[link](https://www.example.com/my great page)</code></td>
</tr>
</tbody>
</table>
<h2 id="95-脚注"><a class="markdownIt-Anchor" href="#95-脚注"></a> 9.5 脚注</h2>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="symbol">^footnote</span>]: <span class="link">这是个脚注</span></span><br></pre></td></tr></table></figure>
<p>您可以像这样创建脚注<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
<h1 id="10-markdown-图片语法"><a class="markdownIt-Anchor" href="#10-markdown-图片语法"></a> 10 Markdown 图片语法</h1>
<h2 id="101-基础语法"><a class="markdownIt-Anchor" href="#101-基础语法"></a> 10.1 基础语法</h2>
<p>要添加图像，请使用感叹号 (<code>!</code>), 然后在方括号增加替代文本，图片链接放在圆括号里，括号里的链接后可以增加一个可选的图片标题文本。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">W!</span>](<span class="link">https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/Markdown%E4%BD%BF%E7%94%A8/w.jpg</span>)</span><br></pre></td></tr></table></figure>
<p><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/Markdown%E4%BD%BF%E7%94%A8/w.jpg" alt="W!"></p>
<p>Typora快捷键: Crtl + Shift + I</p>
<h2 id="102-带链接的图像"><a class="markdownIt-Anchor" href="#102-带链接的图像"></a> 10.2 带链接的图像</h2>
<p>给图片增加链接，请将图像的Markdown 括在方括号中，然后将链接添加在圆括号中。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">![风景图</span>](<span class="link">https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/Markdown%E4%BD%BF%E7%94%A8/small095125P47QH1707616285.jpg</span>)](<span class="link">http://www.baidu.com</span>)</span><br></pre></td></tr></table></figure>
<p><a href="http://www.baidu.com"><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/Markdown%E4%BD%BF%E7%94%A8/small095125P47QH1707616285.jpg" alt="图片描述"></a></p>
<h1 id="11-markdown-转义字符语法"><a class="markdownIt-Anchor" href="#11-markdown-转义字符语法"></a> 11 Markdown 转义字符语法</h1>
<h2 id="111-特殊字符用法"><a class="markdownIt-Anchor" href="#111-特殊字符用法"></a> 11.1 特殊字符用法</h2>
<p>要显示原本用于格式化 Markdown 文档的字符，请在字符前面添加反斜杠字符 \ 。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">\* Without the backslash, this would be a bullet in an unordered list.</span><br></pre></td></tr></table></figure>
<p>* Without the backslash, this would be a bullet in an unordered list.</p>
<h2 id="112-特殊字符自动转义"><a class="markdownIt-Anchor" href="#112-特殊字符自动转义"></a> 11.2 特殊字符自动转义</h2>
<p>在 HTML 文件中，有两个字符需要特殊处理： <code>&lt;</code> 和 <code>&amp;</code> 。 <code>&lt;</code> 符号用于起始标签，<code>&amp;</code> 符号则用于标记 HTML 实体，如果你只是想要使用这些符号，你必须要使用实体的形式，像是 <code>&lt;</code> 和 <code>&amp;</code>。</p>
<p>例如:</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">http://images.google.com/images?num=30&amp;q=larry+bird</span><br></pre></td></tr></table></figure>
<p>应该如此才能正常使用</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">http://images.google.com/images?num=30&amp;amp;q=larry+bird</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th style="text-align:center">&gt;</th>
<th style="text-align:center">&amp;</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>&amp;lt;</code></td>
<td style="text-align:center"><code>&amp;amp;</code></td>
</tr>
</tbody>
</table>
<h1 id="12-markdown-内嵌-html-标签"><a class="markdownIt-Anchor" href="#12-markdown-内嵌-html-标签"></a> 12 Markdown 内嵌 HTML 标签</h1>
<p>对于 Markdown 涵盖范围之外的标签，都可以直接在文件里面用 HTML 本身。如需使用 HTML，不需要额外标注这是 HTML 或是 Markdown，只需 HTML 标签添加到 Markdown 文本中即可。</p>
<h2 id="121-行级內联标签"><a class="markdownIt-Anchor" href="#121-行级內联标签"></a> 12.1 行级內联标签</h2>
<p>HTML 的行级內联标签如 <code>&lt;span&gt;</code>、<code>&lt;cite&gt;</code>、<code>&lt;del&gt;</code> 不受限制，可以在 Markdown 的段落、列表或是标题里任意使用。依照个人习惯，甚至可以不用 Markdown 格式，而采用 HTML 标签来格式化。例如：如果比较喜欢 HTML 的 <code>&lt;a&gt;</code> 或 <code>&lt;img&gt;</code> 标签，可以直接使用这些标签，而不用 Markdown 提供的链接或是图片语法。当你需要更改元素的属性时（例如为文本指定颜色或更改图像的宽度），使用 HTML 标签更方便些。</p>
<p>HTML 行级內联标签和区块标签不同，在內联标签的范围内， Markdown 的语法是可以解析的。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="strong">**这一段话既可以这么加粗**</span>,<span class="language-xml"><span class="tag">&lt;<span class="name">strong</span>&gt;</span></span>也可以这么加粗。<span class="language-xml"><span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p><strong>这一段话既可以这么加粗</strong>,<strong>也可以这么加粗。</strong></p>
<h2 id="122-区块标签"><a class="markdownIt-Anchor" href="#122-区块标签"></a> 12.2 区块标签</h2>
<p>区块元素──比如 <code>&lt;div&gt;</code>、<code>&lt;table&gt;</code>、<code>&lt;pre&gt;</code>、<code>&lt;p&gt;</code> 等标签，必须在前后加上空行，以便于内容区分。而且这些元素的开始与结尾标签，不可以用 tab 或是空白来缩进。Markdown 会自动识别这区块元素，避免在区块标签前后加上没有必要的 <code>&lt;p&gt;</code> 标签。</p>
<p>例如，在 Markdown 文件里加上一段 HTML 表格：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">在标签之前的元素</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">strong</span>&gt;</span></span><br><span class="line">            span标签内的元素</span><br><span class="line">        <span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">在标签之后的元素</span><br></pre></td></tr></table></figure>
<p>在标签之前的元素</p>
<div>
	<span>
        <strong>
            span标签内的元素
        </strong>
    </span>
</div>
在标签之后的元素
<p><strong>注意：在 HTML 块级标签内不能使用 Markdown 语法。例如 <code>&lt;p&gt;italic and **bold**&lt;/p&gt;</code> 将不起作用。</strong></p>
<h1 id="13-markdown拓展功能"><a class="markdownIt-Anchor" href="#13-markdown拓展功能"></a> 13 Markdown拓展功能</h1>
<h2 id="131-mermaid"><a class="markdownIt-Anchor" href="#131-mermaid"></a> 13.1 Mermaid</h2>
<p><strong>Mermaid 允许你使用文本和代码创建图表和可视化。</strong></p>
<p>它是一个基于 JavaScript 的图表绘制工具，可渲染 Markdown 启发的文本定义以动态创建和修改图表。</p>
<p>Mermaid 是一个基于 JavaScript 的图表绘制工具，它使用 Markdown 启发的文本定义和渲染器来创建和修改复杂的图表。Mermaid 的主要目的是帮助文档跟上开发的步伐。</p>
<p>Mermaid中文网:<a href="https://mermaid.nodejs.cn/intro/">关于 Mermaid | Mermaid 中文网 (nodejs.cn)</a></p>
<p><strong>流程图:</strong></p>
<pre class="mermaid">graph TD;
    A--&gt;B;
    A--&gt;C;
    B--&gt;D;
    C--&gt;D;</pre>
<p><strong>时序图:</strong></p>
<pre class="mermaid">sequenceDiagram
    participant Alice
    participant Bob
    Alice-&gt;&gt;John: Hello John, how are you?
    loop Healthcheck
        John-&gt;&gt;John: Fight against hypochondria
    end
    Note right of John: Rational thoughts <br>prevail!
    John--&gt;&gt;Alice: Great!
    John-&gt;&gt;Bob: How about you?
    Bob--&gt;&gt;John: Jolly good!</pre>
<p><strong>甘特图:</strong></p>
<pre class="mermaid">gantt
dateFormat  YYYY-MM-DD
title Adding GANTT diagram to mermaid
excludes weekdays 2014-01-10

section A section
Completed task            :done,    des1, 2014-01-06,2014-01-08
Active task               :active,  des2, 2014-01-09, 3d
Future task               :         des3, after des2, 5d
Future task2               :         des4, after des3, 5d</pre>
<p>等等</p>
<h2 id="132-latex"><a class="markdownIt-Anchor" href="#132-latex"></a> 13.2 LaTex</h2>
<p>LaTeX 是一个让你的文档看起来更专业的排版系统，而不是文字处理器。它尤其适合处理篇幅较长、结构严谨的文档，并且十分擅长处理公式表达。它是免费的软件，对大多数操作系统都适用。</p>
<p>LaTex <a href="https://oi-wiki.org/tools/latex/">LaTeX 入门 - OI Wiki (oi-wiki.org)</a></p>
<p class="katex-block katex-error" title="ParseError: KaTeX parse error: No such environment: equation at position 7: \begin{̲e̲q̲u̲a̲t̲i̲o̲n̲}̲
CPI = \frac{m}…"><mjx-container class="MathJax" jax="SVG" display="true" width="full" style="min-width: 20.834ex;"><svg style="vertical-align: -1.5ex; min-width: 20.834ex;" xmlns="http://www.w3.org/2000/svg" width="100%" height="4.131ex" role="img" focusable="false"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(0.0181,-0.0181) translate(0, -1163)"><g data-mml-node="math"><g data-mml-node="mtable" transform="translate(2078,0) translate(-2078,0)"><g transform="translate(0 1163) matrix(1 0 0 -1 0 0) scale(55.25)"><svg data-table="true" preserveAspectRatio="xMidYMid" viewBox="2526.3 -1163 1 1826"><g transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mlabeledtr" transform="translate(0,45)"><g data-mml-node="mtd"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mi" transform="translate(760,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mi" transform="translate(1511,0)"><path data-c="1D43C" d="M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z"></path></g><g data-mml-node="mo" transform="translate(2292.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(3348.6,0)"><g data-mml-node="mi" transform="translate(413,676)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mrow" transform="translate(220,-686)"><g data-mml-node="mi"><path data-c="1D43C" d="M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z"></path></g><g data-mml-node="mi" transform="translate(504,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g></g><rect width="1464" height="60" x="120" y="220"></rect></g></g></g></g></svg><svg data-labels="true" preserveAspectRatio="xMaxYMid" viewBox="1278 -1163 1 1826"><g data-labels="true" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mtd" id="mjx-eqn:1" transform="translate(0,795)"><text data-id-align="true"></text><g data-idbox="true" transform="translate(0,-750)"><g data-mml-node="mtext"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(389,0)"></path><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" transform="translate(889,0)"></path></g></g></g></g></svg></g></g></g></g></svg></mjx-container>
</p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p>这是个脚注 <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>基础</tag>
        <tag>教程</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>学成在线Day05</title>
    <url>/2024/03/21/%E5%AD%A6%E6%88%90%E5%9C%A8%E7%BA%BFDay05/</url>
    <content><![CDATA[<h1 id="学成在线day05"><a class="markdownIt-Anchor" href="#学成在线day05"></a> 学成在线Day05</h1>
<h1 id="媒资管理开发流程"><a class="markdownIt-Anchor" href="#媒资管理开发流程"></a> 媒资管理开发流程</h1>
<p>见word资料</p>
<h1 id="微服务搭建"><a class="markdownIt-Anchor" href="#微服务搭建"></a> 微服务搭建</h1>
<p>在xuecheng-plus-parent中添加依赖管理</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>${spring-cloud-alibaba.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>在内容管理模块的接口工程，因为api是启动Http服务，在其中添加如下依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>在bootstrap.yml文件加入如下配置:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#微服务配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">content-api</span> <span class="comment">#微服务名称</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">server-addr:</span> <span class="number">192.168</span><span class="number">.101</span><span class="number">.65</span><span class="string">:8848</span></span><br><span class="line">      <span class="attr">discovery:</span> <span class="comment">#服务相关配置</span></span><br><span class="line">        <span class="attr">namespace:</span> <span class="string">dev-Wwh</span></span><br><span class="line">        <span class="attr">group:</span> <span class="string">xuecheng-plus-project</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="attr">namespace:</span> <span class="string">dev-Wwh</span></span><br><span class="line">        <span class="attr">group:</span> <span class="string">xuecheng-plus-project</span></span><br><span class="line">        <span class="attr">file-extension:</span> <span class="string">yaml</span></span><br><span class="line">        <span class="attr">refresh-enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br></pre></td></tr></table></figure>
<p>在搭建Nacos服务发现中心之前需要搞清楚两个概念：namespace和group</p>
<ul>
<li>
<p>namespace:用于区分环境、比如：开发环境、测试环境、生产环境。</p>
</li>
<li>
<p>group:用于区分项目，比如：xuecheng-plus项目、xuecheng2.0项目</p>
</li>
</ul>
<h3 id="配置三要素"><a class="markdownIt-Anchor" href="#配置三要素"></a> <strong>配置三要素</strong></h3>
<p>搭建完成Nacos服务发现中心，下边搭建Nacos为配置中心，其目的就是通过Nacos去管理项目的所有配置。</p>
<p>先将项目中的配置文件分分类：</p>
<p>1、每个项目特有的配置</p>
<p>是指该配置只在有些项目中需要配置，或者该配置在每个项目中配置的值不同。</p>
<p>比如：spring.application.name每个项目都需要配置但值不一样，以及有些项目需要连接数据库而有些项目不需要，有些项目需要配置消息队列而有些项目不需要。</p>
<p>2、项目所公用的配置</p>
<p>是指在若干项目中配置内容相同的配置。比如：redis的配置，很多项目用的同一套redis服务所以配置也一样。</p>
<p>另外还需要知道nacos如何去定位一个具体的配置文件，即：namespace、group、dataid.</p>
<p>1、通过namespace、group找到具体的环境和具体的项目。</p>
<p>2、通过dataid找到具体的配置文件，dataid有三部分组成</p>
<p><em><strong>比如：content-service-dev.yaml配置文件 由（content-service）-（dev）. (yaml)三部分组成</strong></em></p>
<p><em><strong>content-service：第一部分，它是在application.yaml中配置的应用名，即spring.application.name的值。</strong></em></p>
<p><em><strong>dev：第二部分，它是环境名，通过spring.profiles.active指定，</strong></em></p>
<p><em><strong>Yaml: 第三部分，它是配置文件 的后缀，目前nacos支持properties、yaml等格式类型，本项目选择yaml格式类型。</strong></em></p>
<h3 id="配置content-service"><a class="markdownIt-Anchor" href="#配置content-service"></a> 配置content-service</h3>
<p>在content-service工程的test/resources 中添加bootstrap.yaml，内容如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">content-service</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">server-addr:</span> <span class="number">192.168</span><span class="number">.101</span><span class="number">.65</span><span class="string">:8848</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">namespace:</span> <span class="string">dev</span></span><br><span class="line">        <span class="attr">group:</span> <span class="string">xuecheng-plus-project</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="attr">namespace:</span> <span class="string">dev</span></span><br><span class="line">        <span class="attr">group:</span> <span class="string">xuecheng-plus-project</span></span><br><span class="line">        <span class="attr">file-extension:</span> <span class="string">yaml</span></span><br><span class="line">        <span class="attr">refresh-enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">#profiles默认为dev</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br></pre></td></tr></table></figure>
<p>通过运行观察控制台打印出下边的信息，NacosRestTemplate.java通过Post方式与nacos服务端交互读取配置信息。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">[NacosRestTemplate.java:<span class="number">476</span>] - HTTP method: POST, url: http:<span class="comment">//192.168.101.65:8848/nacos/v1/cs/configs/listener, body: {Listening-Configs=content-service.yaml?xuecheng-plus-project??dev?content-service-dev.yaml?xuecheng-plus-project?88459b1483b8381eccc2ef462bd59182?dev?content-service?xuecheng-plus-project??dev?, tenant=dev}</span></span><br></pre></td></tr></table></figure>
<h3 id="配置content-api"><a class="markdownIt-Anchor" href="#配置content-api"></a> 配置content-api</h3>
<p>内容如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#微服务配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">content-api</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">server-addr:</span> <span class="number">192.168</span><span class="number">.101</span><span class="number">.65</span><span class="string">:8848</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">namespace:</span> <span class="string">dev</span></span><br><span class="line">        <span class="attr">group:</span> <span class="string">xuecheng-plus-project</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="attr">namespace:</span> <span class="string">dev</span></span><br><span class="line">        <span class="attr">group:</span> <span class="string">xuecheng-plus-project</span></span><br><span class="line">        <span class="attr">file-extension:</span> <span class="string">yaml</span></span><br><span class="line">        <span class="attr">refresh-enabled:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">extension-configs:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">data-id:</span> <span class="string">content-service-${spring.profiles.active}.yaml</span></span><br><span class="line">            <span class="attr">group:</span> <span class="string">xuecheng-plus-project</span></span><br><span class="line">            <span class="attr">refresh:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br></pre></td></tr></table></figure>
<p>通过这一部分，能让其引用service层的数据库连接配置：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">extension-configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">data-id:</span> <span class="string">content-service-${spring.profiles.active}.yaml</span></span><br><span class="line">    <span class="attr">group:</span> <span class="string">xuecheng-plus-project</span></span><br><span class="line">    <span class="attr">refresh:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>将swagger配置和logging配置抽取到项目公共组，来让所有项目通用配置这部分内容</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">shared-configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">data-id:</span> <span class="string">swagger-${spring.profiles.active}.yaml</span>       <span class="comment">#swagger文件配置</span></span><br><span class="line">    <span class="attr">group:</span> <span class="string">xuecheng-plus-common</span></span><br><span class="line">    <span class="attr">refresh:</span> <span class="literal">true</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">data-id:</span> <span class="string">logging-${spring.profiles.active}.yaml</span>       <span class="comment">#日志文件配置</span></span><br><span class="line">    <span class="attr">group:</span> <span class="string">xuecheng-plus-common</span></span><br><span class="line">    <span class="attr">refresh:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>nacos中并未对<code>extension-configs</code>和<code>shared-configs</code>的差别</p>
<p>但是我们在使用时，若使用公共配置文件，则需要配置<code>shared-configs</code></p>
<p>若使用私有配置，则需要配置<code>extension-configs</code></p>
<h3 id="配置优先级"><a class="markdownIt-Anchor" href="#配置优先级"></a> 配置优先级</h3>
<p>到目前为止已将所有微服务的配置统一在nacos进行配置，用到的配置文件有本地的配置文件 bootstrap.yaml和nacos上的配置文件，SpringBoot读取配置文件 的顺序如下：</p>
<p><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240216202431287.png" alt="image-20240216202431287"></p>
<p>引入配置文件的形式有：</p>
<p>1、以项目应用名方式引入</p>
<p>2、以扩展配置文件方式引入</p>
<p>3、以共享配置文件 方式引入</p>
<p>4、本地配置文件</p>
<p>各配置文件 的优先级：项目应用名配置文件 &gt; 扩展配置文件 &gt; 共享配置文件 &gt; 本地配置文件。</p>
<p>想让本地最优先，可以在nacos配置文件 中配置如下即可实现：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"> <span class="attr">cloud:</span></span><br><span class="line">  <span class="attr">config:</span></span><br><span class="line">    <span class="attr">override-none:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h1 id="分布式文件系统"><a class="markdownIt-Anchor" href="#分布式文件系统"></a> 分布式文件系统</h1>
<p>简介请查看word中分布式文件系统这一章:[分布式简介](E:\学习资料\学成在线项目—资料\day05 媒资管理 Nacos Gateway MinIO\资料\第3章媒资管理模块v3.1.docx)</p>
<p>我们使用Minio分布式文件存储系统</p>
<h3 id="sdk"><a class="markdownIt-Anchor" href="#sdk"></a> SDK</h3>
<p>操作教程地址：<a href="https://docs.min.io/docs/java-client-quickstart-guide.html">https://docs.min.io/docs/java-client-quickstart-guide.html</a></p>
<p>最低需求Java 1.8或更高版本</p>
<p>Maven依赖:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.minio<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>minio<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.4.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.squareup.okhttp3<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>okhttp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.8.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="上传图片"><a class="markdownIt-Anchor" href="#上传图片"></a> 上传图片</h1>
<p>首先分析接口：</p>
<p>请求地址：/media/upload/coursefile</p>
<p>请求内容：<strong>Content-Type:</strong> multipart/form-data;</p>
<p>form-data; name=“filedata”; filename=“具体的文件名称”</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ApiOperation("上传图片")</span></span><br><span class="line"><span class="meta">@PostMapping(value = "/upload/coursefile",consumes = MediaType.MULTIPART_FORM_DATA_VALUE)</span></span><br><span class="line"><span class="keyword">public</span> UploadFileResultDTO <span class="title function_">upload</span><span class="params">(<span class="meta">@RequestPart("file")</span> MultipartFile file)</span> {</span><br><span class="line">    <span class="comment">//调用service上传文件</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<p><code>consumes</code> 请求提交内容类型，<code>MediaType</code>方式，如 <code>application/json</code>、<code>application/x-www-urlencode</code>、<code>multipart/form-data</code>等</p>
<p><code>@RequestPart</code>用于将<code>multipart/form-data</code>类型数据映射到控制器处理方法的参数中。除了<code>@RequestPart</code>注解外，<code>@RequestParam</code>同样可以用于此类操作。</p>
<p>上传到Minio需要进行的操作</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1.文件上传到Minio</span></span><br><span class="line"><span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> uploadFileParamsDto.getFilename();</span><br><span class="line"><span class="comment">//获取文件拓展名</span></span><br><span class="line"><span class="type">String</span> <span class="variable">extension</span> <span class="operator">=</span> StringUtils.substringAfterLast(fileName, <span class="string">"."</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//根据拓展名获取媒体类型</span></span><br><span class="line"><span class="type">String</span> <span class="variable">mimeType</span> <span class="operator">=</span> getMimeType(extension);</span><br><span class="line"></span><br><span class="line"><span class="type">String</span> <span class="variable">defaultFolderPath</span> <span class="operator">=</span> getDefaultFolderPath();</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取MD5值</span></span><br><span class="line"><span class="type">String</span> <span class="variable">fileMd5</span> <span class="operator">=</span> getFileMd5(<span class="keyword">new</span> <span class="title class_">File</span>(localFilePath));</span><br><span class="line"></span><br><span class="line"><span class="comment">//objectName以年月日作为名称存储</span></span><br><span class="line"><span class="type">String</span> <span class="variable">objectName</span> <span class="operator">=</span> defaultFolderPath + fileMd5 + extension;</span><br><span class="line"></span><br><span class="line"><span class="type">boolean</span> <span class="variable">result</span> <span class="operator">=</span> addMediaFilesToMinIO(localFilePath, mimeType, bucket_mediaFiles, objectName);</span><br><span class="line"><span class="keyword">if</span>(!result){</span><br><span class="line">    XueChengPlusException.cast(<span class="string">"文件上传失败"</span>);</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<p>在Controller层，接收到文件后要创建暂时文件</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//创建临时文件</span></span><br><span class="line"><span class="type">File</span> <span class="variable">tempFile</span> <span class="operator">=</span> File.createTempFile(<span class="string">"minio"</span>, <span class="string">"temp"</span>);</span><br><span class="line">file.transferTo(tempFile);</span><br></pre></td></tr></table></figure>
<p><code>File.createTempFile</code> 是 Java 中的一个方法，用于创建一个临时文件。这个方法是 <code>java.io.File</code> 类的一部分。</p>
<p><code>transferTo</code> 是 Java 中的一个方法，用于将文件的内容转移到另一个文件中。这个方法是 <code>java.nio.file.Files</code> 类的一部分，它使用了 Java 的 NIO（Non-blocking I/O）特性，可以更高效地处理文件操作。</p>
<p>这个方法会在默认的临时文件目录中创建一个新的空文件，文件名是由给定的前缀和后缀生成的。这个临时文件的路径可以通过 <code>tempFile.getPath()</code> 获取。</p>
<p>注意：创建的临时文件在 JVM 退出时不会自动删除，需要手动删除。如果你希望临时文件在 JVM 退出时自动删除，可以调用 <code>tempFile.deleteOnExit()</code> 方法。</p>
<h1 id="service事务优化"><a class="markdownIt-Anchor" href="#service事务优化"></a> Service事务优化</h1>
<p>上边的service方法优化后并测试通过，现在思考关于uploadFile方法的是否应该开启事务。</p>
<p>目前是在uploadFile方法上添加@Transactional，当调用uploadFile方法前会开启数据库事务，如果上传文件过程时间较长那么数据库的事务持续时间就会变长，这样数据库链接释放就慢，最终导致数据库链接不够用。</p>
<p>我们只将addMediaFilesToDb方法添加事务控制即可,uploadFile方法上的@Transactional注解去掉。</p>
<p>我们人为在int insert = mediaFilesMapper.insert(mediaFiles);下边添加一个异常代码int a=1/0;</p>
<p>测试是否事务控制。很遗憾，事务控制失败。</p>
<p>方法上已经添加了@Transactional注解为什么该方法不能被事务控制呢？</p>
<p>如果是在uploadFile方法上添加@Transactional注解就可以控制事务，去掉则不行。</p>
<p><strong>现在的问题其实是一个非事务方法调同类一个事务方法，事务无法控制，这是为什么？</strong></p>
<p>下边分析原因：</p>
<p>如果在uploadFile方法上添加@Transactional注解，代理对象执行此方法前会开启事务，如下图：</p>
<p><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240217202502483.png" alt="image-20240217202502483"></p>
<p>如果在uploadFile方法上没有@Transactional注解，代理对象执行此方法前不进行事务控制，如下图：</p>
<p><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240217202523999.png" alt="image-20240217202523999"></p>
<p>所以判断该方法是否可以事务控制必须保证是通过代理对象调用此方法，且此方法上添加了@Transactional注解。</p>
<p>现在在addMediaFilesToDb方法上添加@Transactional注解，也不会进行事务控制是因为并不是通过代理对象执行的addMediaFilesToDb方法。为了判断在uploadFile方法中去调用addMediaFilesToDb方法是否是通过代理对象去调用，我们可以打断点跟踪。</p>
<p>我们发现在uploadFile方法中去调用addMediaFilesToDb方法不是通过代理对象去调用，<strong>而是直接调用本类的方法</strong>。</p>
<p>简而言之：只有通过调用代理类来执行事务操作才可以控制事务</p>
<p>那么解决方案就明了了，首先我们将这个方法在接口中创建，然后我们将service类代理对象注入其中，并利用代理对象调用数据库函数即可</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>学习</tag>
        <tag>后端</tag>
        <tag>黑马程序员</tag>
        <tag>学成在线</tag>
      </tags>
  </entry>
  <entry>
    <title>学成在线Day06</title>
    <url>/2024/03/21/%E5%AD%A6%E6%88%90%E5%9C%A8%E7%BA%BFDay06/</url>
    <content><![CDATA[<h1 id="学成在线day06"><a class="markdownIt-Anchor" href="#学成在线day06"></a> 学成在线Day06</h1>
<h1 id="上传视频"><a class="markdownIt-Anchor" href="#上传视频"></a> 上传视频</h1>
<h2 id="断点续传技术"><a class="markdownIt-Anchor" href="#断点续传技术"></a> 断点续传技术</h2>
<h3 id="1什么是断点续传"><a class="markdownIt-Anchor" href="#1什么是断点续传"></a> 1.什么是断点续传</h3>
<p>通常视频文件都比较大，所以对于媒资系统上传文件的需求要满足大文件的上传要求。http协议本身对上传文件大小没有限制，但是客户的网络环境质量、电脑硬件环境等参差不齐，如果一个大文件快上传完了网断了没有上传完成，需要客户重新上传，用户体验非常差，所以对于大文件上传的要求最基本的是断点续传。</p>
<p>什么是断点续传：</p>
<p>​    引用百度百科：断点续传指的是在下载或上传时，将下载或上传任务（一个文件或一个压缩包）人为的划分为几个部分，每一个部分采用一个线程进行上传或下载，如果碰到网络故障，可以从已经上传或下载的部分开始继续上传下载未完成的部分，而没有必要从头开始上传下载，断点续传可以提高节省操作时间，提高用户体验性。</p>
<p>断点续传流程如下图：</p>
<p><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240217205319182.png" alt="image-20240217205319182"></p>
<p>流程如下：</p>
<p>1、前端上传前先把文件分成块</p>
<p>2、一块一块的上传，上传中断后重新上传，已上传的分块则不用再上传</p>
<p>3、各分块上传完成最后在服务端合并文件</p>
<h3 id="2文件分块测试"><a class="markdownIt-Anchor" href="#2文件分块测试"></a> 2.文件分块测试</h3>
<p>文件分块测试代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//分块测试</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testChunk</span><span class="params">()</span> <span class="keyword">throws</span> IOException {</span><br><span class="line">    <span class="type">File</span> <span class="variable">sourceFile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">"C:\\Users\\Administrator\\Desktop\\分块测试\\test.mp4"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">fileChunkPath</span> <span class="operator">=</span> <span class="string">"C:\\Users\\Administrator\\Desktop\\分块测试"</span>;</span><br><span class="line">    <span class="comment">//分块大小</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">chunkSize</span> <span class="operator">=</span> <span class="number">1024</span> * <span class="number">1024</span> * <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//分块数量</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">chunkNum</span> <span class="operator">=</span> (<span class="type">int</span>) Math.ceil(sourceFile.length() * <span class="number">1.0</span> / chunkSize);</span><br><span class="line">    <span class="type">RandomAccessFile</span> <span class="variable">ref_r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RandomAccessFile</span>(sourceFile, <span class="string">"r"</span>);</span><br><span class="line">    <span class="comment">//缓冲区</span></span><br><span class="line">    <span class="type">byte</span>[] b = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">    <span class="keyword">for</span> ( <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; chunkNum; i++ ) {</span><br><span class="line">        <span class="comment">//创建分块文件</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">chunkFile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(fileChunkPath + i);</span><br><span class="line">        <span class="comment">//分块文件写入流</span></span><br><span class="line">        <span class="type">RandomAccessFile</span> <span class="variable">ref_w</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RandomAccessFile</span>(chunkFile, <span class="string">"rw"</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="comment">//读取文件</span></span><br><span class="line">        <span class="keyword">while</span> ( (len = ref_r.read(b)) != -<span class="number">1</span> ) {</span><br><span class="line">            ref_w.write(b, <span class="number">0</span>, len);</span><br><span class="line">            <span class="keyword">if</span> ( chunkFile.length() &gt;= chunkSize ) {</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<p>其中用到了<code>RandomAccessFile</code></p>
<p>RandomAccessFile从字面意思翻译：随机通行文件</p>
<p>下面开始介绍一下RandomAccessFile，该类是直接继承Object的类，既可以读取文件内容，也可以向文件输出数据。</p>
<p>RandomAccessFile支持“随机访问”的方式，程序快可以直接跳转到文件的<strong>任意地方</strong>来读写数据。</p>
<p>RandomAccessFile的一个重要使用场景就是网络请求中的多线程下载及断点续传。</p>
<p>文件分块合并测试代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testMerge</span><span class="params">()</span> <span class="keyword">throws</span> Exception {</span><br><span class="line">    <span class="comment">//找到分块文件路径</span></span><br><span class="line">    <span class="type">File</span> <span class="variable">chunkFolder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">"C:\\Users\\Wwhds\\Desktop\\分块测试\\chunk"</span>);</span><br><span class="line">    <span class="comment">//源文件</span></span><br><span class="line">    <span class="type">File</span> <span class="variable">sourceFile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">"C:\\Users\\Wwhds\\Desktop\\分块测试\\test.mp4"</span>);</span><br><span class="line">    <span class="comment">//合并文件</span></span><br><span class="line">    <span class="type">File</span> <span class="variable">mergeFile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">"C:\\Users\\Wwhds\\Desktop\\分块测试\\test_merge.mp4"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//取出所有分块文件</span></span><br><span class="line">    File[] chunkFiles = chunkFolder.listFiles();</span><br><span class="line"></span><br><span class="line">    List&lt;File&gt; list = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">if</span> ( chunkFiles != <span class="literal">null</span> ) {</span><br><span class="line">        list = Arrays.asList(chunkFiles);</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//根据文件名称排序list</span></span><br><span class="line">    <span class="keyword">if</span> ( list != <span class="literal">null</span> ) {</span><br><span class="line">        list.sort(Comparator.comparingInt(o -&gt; Integer.parseInt(o.getName())));</span><br><span class="line">    }</span><br><span class="line">    <span class="type">RandomAccessFile</span> <span class="variable">raf_rw</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RandomAccessFile</span>(mergeFile, <span class="string">"rw"</span>);</span><br><span class="line">    <span class="type">byte</span> b[] = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">    <span class="keyword">for</span> ( File file : list ) {</span><br><span class="line">        <span class="type">RandomAccessFile</span> <span class="variable">raf_r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RandomAccessFile</span>(file, <span class="string">"r"</span>);</span><br><span class="line">        <span class="type">int</span> len;</span><br><span class="line">        <span class="keyword">while</span> ( (len = raf_r.read(b)) != -<span class="number">1</span> ) {</span><br><span class="line">            raf_rw.write(b, <span class="number">0</span>, len);</span><br><span class="line">        }</span><br><span class="line">        raf_r.close();</span><br><span class="line">    }</span><br><span class="line">    raf_rw.close();</span><br><span class="line">    System.out.println(<span class="string">"合并完成"</span>);				<span class="comment">//MD5验证</span></span><br><span class="line">    <span class="keyword">if</span> ( DigestUtils.md5Hex(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(sourceFile)).equals(DigestUtils.md5Hex(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(mergeFile))) ) {</span><br><span class="line">        System.out.println(<span class="string">"文件一致"</span>);</span><br><span class="line">    }<span class="keyword">else</span> {</span><br><span class="line">        System.out.println(<span class="string">"文件不一致"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<h3 id="3视频上传流程"><a class="markdownIt-Anchor" href="#3视频上传流程"></a> 3.视频上传流程</h3>
<p><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240218151425388.png" alt="image-20240218151425388"></p>
<p>1、前端对文件进行分块。</p>
<p>2、前端上传分块文件前请求媒资服务检查文件是否存在，如果已经存在则不再上传。</p>
<p>3、如果分块文件不存在则前端开始上传</p>
<p>4、前端请求媒资服务上传分块。</p>
<p>5、媒资服务将分块上传至MinIO。</p>
<p>6、前端将分块上传完毕请求媒资服务合并分块。</p>
<p>7、媒资服务判断分块上传完成则请求MinIO合并文件。</p>
<p>8、合并完成校验合并后的文件是否完整，如果完整则上传完成，否则删除文件。</p>
<h3 id="4minio文件上传测试"><a class="markdownIt-Anchor" href="#4minio文件上传测试"></a> 4.Minio文件上传测试</h3>
<p>注意分块内容必须大于等于5M</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;ComposeSource&gt; sources = Stream.iterate(<span class="number">0</span>, i -&gt; ++i)</span><br><span class="line">    .limit(<span class="number">42</span>)</span><br><span class="line">    .map(i -&gt; ComposeSource.builder()</span><br><span class="line">         .bucket(<span class="string">"testbucket"</span>)</span><br><span class="line">         .object(<span class="string">"chunk/"</span> + i)</span><br><span class="line">         .build())</span><br><span class="line">    .collect(Collectors.toList());</span><br></pre></td></tr></table></figure>
<p>stream流全新用法</p>
<h1 id="上传分块"><a class="markdownIt-Anchor" href="#上传分块"></a> 上传分块</h1>
<p>上传文件大小限制需要解除</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">servlet:</span></span><br><span class="line">    <span class="attr">multipart:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">max-file-size:</span> <span class="string">50MB</span>			<span class="string">//上传文件最大限制</span></span><br><span class="line">      <span class="attr">max-request-size:</span> <span class="string">50MB</span>		<span class="string">//请求文件最大限制</span></span><br></pre></td></tr></table></figure>
<p>在nacos配置即可</p>
<p>内容过于庞大，请在代码文件中查看</p>
<h1 id="视频处理"><a class="markdownIt-Anchor" href="#视频处理"></a> 视频处理</h1>
<p>视频上传成功后需要对视频进行转码处理。</p>
<p>什么是视频编码？查阅百度百科如下：</p>
<p>详情参考 ：<a href="https://baike.baidu.com/item/%E8%A7%86%E9%A2%91%E7%BC%96%E7%A0%81/839038">https://baike.baidu.com/item/%E8%A7%86%E9%A2%91%E7%BC%96%E7%A0%81/839038</a></p>
<p>首先我们要分清文件格式和编码格式：</p>
<p>文件格式：是指.mp4、.avi、.rmvb等 这些不同扩展名的视频文件的文件格式 ，视频文件的内容主要包括视频和音频，其文件格式是按照一 定的编码格式去编码，并且按照该文件所规定的封装格式将视频、音频、字幕等信息封装在一起，播放器会根据它们的封装格式去提取出编码，然后由播放器解码，最终播放音视频。</p>
<p>音视频编码格式：通过音视频的压缩技术，将视频格式转换成另一种视频格式，通过视频编码实现流媒体的传输。比如：一个.avi的视频文件原来的编码是a，通过编码后编码格式变为b，音频原来为c，通过编码后变为d。</p>
<p>音视频编码格式各类繁多，主要有几下几类：</p>
<p>MPEG系列</p>
<p>（由ISO[国际标准组织机构]下属的MPEG[运动图象专家组]开发 ）视频编码方面主要是Mpeg1（vcd用的就是它）、Mpeg2（DVD使用）、Mpeg4（的DVDRIP使用的都是它的变种，如：divx，xvid等）、Mpeg4 AVC（正热门）；音频编码方面主要是MPEG Audio Layer 1/2、MPEG Audio Layer 3（大名鼎鼎的mp3）、MPEG-2 AAC 、MPEG-4 AAC等等。注意：DVD音频没有采用Mpeg的。</p>
<p>H.26X系列</p>
<p>（由ITU[国际电传视讯联盟]主导，侧重网络传输，注意：只是视频编码）</p>
<p>包括H.261、H.262、H.263、H.263+、H.263++、H.264（就是MPEG4 AVC-合作的结晶）</p>
<p>目前最常用的编码标准是视频H.264，音频AAC。</p>
<h1 id="分布式调度"><a class="markdownIt-Anchor" href="#分布式调度"></a> 分布式调度</h1>
<p>对一个视频的转码可以理解为一个任务的执行，如果视频的数量比较多，如何去高效处理一批任务呢？</p>
<p>1、多线程</p>
<p>多线程是充分利用单机的资源。</p>
<p>2、分布式加多线程</p>
<p>充分利用多台计算机，每台计算机使用多线程处理。</p>
<p>方案2可扩展性更强。</p>
<p>方案2是一种分布式任务调度的处理方案。</p>
<p>什么是分布式任务调度？</p>
<p>我们可以先思考一下下面业务场景的解决方案：</p>
<p>​    每隔24小时执行数据备份任务。</p>
<p>​    12306网站会根据车次不同，设置几个时间点分批次放票。</p>
<p>​    某财务系统需要在每天上午10点前结算前一天的账单数据，统计汇总。</p>
<p>​    商品成功发货后，需要向客户发送短信提醒。</p>
<p><strong>什么是分布式任务调度？</strong></p>
<p>​    通常任务调度的程序是集成在应用中的，比如：优惠卷服务中包括了定时发放优惠卷的的调度程序，结算服务中包括了定期生成报表的任务调度程序，由于采用分布式架构，一个服务往往会部署多个冗余实例来运行我们的业务，在这种分布式系统环境下运行任务调度，我们称之为<strong>分布式任务调度</strong>，如下图：</p>
<img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240318125528197.png" alt="image-20240318125528197" style="zoom:50%;">
<p><strong>分布式调度要实现的目标：</strong></p>
<p>​    不管是任务调度程序集成在应用程序中，还是单独构建的任务调度系统，如果采用分布式调度任务的方式就相当于将任务调度程序分布式构建，这样就可以具有分布式系统的特点，并且提高任务的调度处理能力：</p>
<ol>
<li>并行任务调度</li>
</ol>
<p>​    并行任务调度实现靠多线程，如果有大量任务需要调度，此时光靠多线程就会有瓶颈了，因为一台计算机CPU的处理能力是有限的。</p>
<p>​    如果将任务调度程序分布式部署，每个结点还可以部署为集群，这样就可以让多台计算机共同去完成任务调度，我们可以将任务分割为若干个分片，由不同的实例并行执行，来提高任务调度的处理效率。</p>
<ol start="2">
<li>高可用</li>
</ol>
<p>​    若某一个实例宕机，不影响其他实例来执行任务。</p>
<ol start="3">
<li>弹性扩容</li>
</ol>
<p>​    当集群中增加实例就可以提高并执行任务的处理效率。</p>
<ol start="4">
<li>任务管理与监测</li>
</ol>
<p>​    对系统中存在的所有定时任务进行统一的管理及监测。让开发人员及运维人员能够时刻了解任务执行情况，从而做出快速的应急处理响应。</p>
<ol start="5">
<li>避免任务重复执行</li>
</ol>
<p>​    当任务调度以集群方式部署，同一个任务调度可能会执行多次，比如在上面提到的电商系统中到点发优惠券的例子，就会发放多次优惠券，对公司造成很多损失，所以我们需要控制相同的任务在多个运行实例上只执行一次。</p>
<p>我们使用xxl来执行任务调度</p>
<p>XXL-JOB是一个轻量级分布式任务调度平台，其核心设计目标是开发迅速、学习简单、轻量级、易扩展。现已开放源代码并接入多家公司线上产品线，开箱即用。</p>
<p>官网：<a href="https://www.xuxueli.com/xxl-job/">https://www.xuxueli.com/xxl-job/</a></p>
<p>文档：<a href="https://www.xuxueli.com/xxl-job/#%E3%80%8A%E5%88%86%E5%B8%83%E5%BC%8F%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6%E5%B9%B3%E5%8F%B0XXL-JOB%E3%80%8B">https://www.xuxueli.com/xxl-job/#《分布式任务调度平台XXL-JOB》</a></p>
<p>maven依赖：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.xuxueli<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>xxl-job-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>配置文件:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">xxl:</span></span><br><span class="line">  <span class="attr">job:</span></span><br><span class="line">    <span class="attr">admin:</span> </span><br><span class="line">      <span class="attr">addresses:</span> <span class="string">http://192.168.101.65:8088/xxl-job-admin</span></span><br><span class="line">    <span class="attr">executor:</span></span><br><span class="line">      <span class="attr">appname:</span> <span class="string">media-process-service</span></span><br><span class="line">      <span class="attr">address:</span> </span><br><span class="line">      <span class="attr">ip:</span> </span><br><span class="line">      <span class="attr">port:</span> <span class="number">9999</span></span><br><span class="line">      <span class="attr">logpath:</span> <span class="string">/data/applogs/xxl-job/jobhandler</span></span><br><span class="line">      <span class="attr">logretentiondays:</span> <span class="number">30</span></span><br><span class="line">    <span class="attr">accessToken:</span> <span class="string">default_token</span></span><br></pre></td></tr></table></figure>
<p>添加调度</p>
<p>在新增处新增测试任务，注意bean名称要与注册内容相同，可以用cron表达式调度</p>
<p><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240218203347215.png" alt="image-20240218203347215"></p>
<p>点击新增，填写任务信息</p>
<img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240318130501625.png" alt="image-20240318130501625" style="zoom:50%;">
<p>高级配置的其它配置项稍后在分片广播章节详细解释。</p>
<p>添加成功，启动任务</p>
<p><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240318130551255.png" alt="image-20240318130551255"></p>
<p>通过日志查看任务运行情况</p>
<p><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240318130608832.png" alt="image-20240318130608832"></p>
<p>下边启动媒资管理的service工程，启动执行器。</p>
<p>观察执行器方法的执行。</p>
<p><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240318130655394.png" alt="image-20240318130655394"></p>
<p>如果要停止任务需要在调度中心操作</p>
<p><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240318130708805.png" alt="image-20240318130708805"></p>
<p>任务跑一段时间注意清理日志</p>
<p><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240318130722290.png" alt="image-20240318130722290"></p>
<p>xxl路由策略配置详细内容：<a href="https://blog.csdn.net/w_t_y_y/article/details/117119864">xxl-job（四）路由策略_xxl-job路由策略-CSDN博客</a></p>
<h2 id="分片广播"><a class="markdownIt-Anchor" href="#分片广播"></a> 分片广播</h2>
<p>掌握了xxl-job的基本使用，下边思考如何进行分布式任务处理呢？如下图，我们会启动多个执行器组成一个集群，去执行任务。</p>
<p><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240318130800270.png" alt="image-20240318130800270"></p>
<p>执行器在集群部署下调度中心有哪些调度策略呢？</p>
<p>查看xxl-job官方文档，阅读高级配置相关的内容：</p>
<p>高级配置：<br>
- 路由策略：当执行器集群部署时，提供丰富的路由策略，包括；<br>
FIRST（第一个）：固定选择第一个机器；<br>
LAST（最后一个）：固定选择最后一个机器；<br>
ROUND（轮询）：；<br>
RANDOM（随机）：随机选择在线的机器；<br>
CONSISTENT_HASH（一致性HASH）：每个任务按照Hash算法固定选择某一台机器，且所有任务均匀散列在不同机器上。<br>
LEAST_FREQUENTLY_USED（最不经常使用）：使用频率最低的机器优先被选举；<br>
LEAST_RECENTLY_USED（最近最久未使用）：最久未使用的机器优先被选举；<br>
FAILOVER（故障转移）：按照顺序依次进行心跳检测，第一个心跳检测成功的机器选定为目标执行器并发起调度；<br>
BUSYOVER（忙碌转移）：按照顺序依次进行空闲检测，第一个空闲检测成功的机器选定为目标执行器并发起调度；<br>
SHARDING_BROADCAST(分片广播)：广播触发对应集群中所有机器执行一次任务，同时系统自动传递分片参数；可根据分片参数开发分片任务；</p>
<p>- 子任务：每个任务都拥有一个唯一的任务ID(任务ID可以从任务列表获取)，当本任务执行结束并且执行成功时，将会触发子任务ID所对应的任务的一次主动调度，通过子任务可以实现一个任务执行完成去执行另一个任务。<br>
- 调度过期策略：<br>
忽略：调度过期后，忽略过期的任务，从当前时间开始重新计算下次触发时间；<br>
立即执行一次：调度过期后，立即执行一次，并从当前时间开始重新计算下次触发时间；<br>
- 阻塞处理策略：调度过于密集执行器来不及处理时的处理策略；<br>
单机串行（默认）：调度请求进入单机执行器后，调度请求进入FIFO队列并以串行方式运行；<br>
丢弃后续调度：调度请求进入单机执行器后，发现执行器存在运行的调度任务，本次请求将会被丢弃并标记为失败；<br>
覆盖之前调度：调度请求进入单机执行器后，发现执行器存在运行的调度任务，将会终止运行中的调度任务并清空队列，然后运行本地调度任务；<br>
- 任务超时时间：支持自定义任务超时时间，任务运行超时将会主动中断任务；<br>
- 失败重试次数；支持自定义任务失败重试次数，当任务失败时将会按照预设的失败重试次数主动进行重试；</p>
<p>下边要重点说的是分片广播策略，分片是指是调度中心以执行器为维度进行分片，将集群中的执行器标上序号：0，1，2，3…，广播是指每次调度会向集群中的所有执行器发送任务调度，请求中携带分片参数。</p>
<p>如下图：</p>
<img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240318131022846.png" alt="image-20240318131022846" style="zoom:50%;">
<p>每个执行器收到调度请求同时接收分片参数。</p>
<p>xxl-job支持动态扩容执行器集群从而动态增加分片数量，当有任务量增加可以部署更多的执行器到集群中，调度中心会动态修改分片的数量。</p>
<p><strong>作业分片适用哪些场景呢？</strong></p>
<ul>
<li>
<p>分片任务场景：10个执行器的集群来处理10w条数据，每台机器只需要处理1w条数据，耗时降低10倍；</p>
</li>
<li>
<p>广播任务场景：广播执行器同时运行shell脚本、广播集群节点进行缓存更新等。</p>
</li>
</ul>
<p>所以，广播分片方式不仅可以充分发挥每个执行器的能力，并且根据分片参数可以控制任务是否执行，最终灵活控制了执行器集群分布式处理任务。</p>
<p><strong>使用说明：</strong></p>
<p><strong>分片广播</strong> 和普通任务开发流程一致，不同之处在于可以获取分片参数进行分片业务处理。</p>
<p>Java语言任务获取分片参数方式：</p>
<p>BEAN、GLUE模式(Java)，可参考Sample示例执行器中的示例任务</p>
<p>下边测试作业分片：</p>
<ol>
<li>定义作业分片的任务方法</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 2、分片广播任务</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">@XxlJob("shardingJobHandler")</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">shardingJobHandler</span><span class="params">()</span> <span class="keyword">throws</span> Exception {</span><br><span class="line">    <span class="comment">// 分片参数</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">shardIndex</span> <span class="operator">=</span> XxlJobHelper.getShardIndex();</span><br><span class="line">    <span class="type">int</span> <span class="variable">shardTotal</span> <span class="operator">=</span> XxlJobHelper.getShardTotal();</span><br><span class="line">    log.info(<span class="string">"分片参数：当前分片序号 = {}, 总分片数 = {}"</span>, shardIndex, shardTotal);</span><br><span class="line">    log.info(<span class="string">"开始执行第"</span>+shardIndex+<span class="string">"批任务"</span>);</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>在调度中心添加任务</li>
</ol>
<img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240318131421838.png" alt="image-20240318131421838" style="zoom:50%;">
<p>添加成功:</p>
<p><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240318131506343.png" alt="image-20240318131506343"></p>
<p>启动任务，观察日志</p>
<p>下边启动两个执行器实例，观察每个实例的执行情况</p>
<p>首先在nacos中配置media-service的本地优先配置：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"> <span class="attr">cloud:</span></span><br><span class="line">  <span class="attr">config:</span></span><br><span class="line">    <span class="attr">override-none:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>将media-service启动两个实例</p>
<p>两个实例的在启动时注意端口不能冲突：</p>
<p>实例1 在VM options处添加：-Dserver.port=63051 -Dxxl.job.executor.port=9998</p>
<p>实例2 在VM options处添加：-Dserver.port=63050 -Dxxl.job.executor.port=9999</p>
<p><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240318131735660.png" alt="image-20240318131735660"></p>
<p>启动两个实例</p>
<p>观察任务调度中心，稍等片刻执行器有两个</p>
<p><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240318131753744.png" alt="image-20240318131753744"></p>
<p>两示例日志如下:</p>
<p><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240318131828536.png" alt="image-20240318131828536"></p>
<p><img src="https://wwhds-markdown-image.oss-cn-beijing.aliyuncs.com/image-20240318131840898.png" alt="image-20240318131840898"></p>
<p>从日志可以看每个实例的分片序号不同。</p>
<p>如果其中一个执行器挂掉，只剩下一个执行器在工作，稍等片刻调用中心发现少了一个执行器将动态调整总分片数为1。</p>
<p>到此作业分片任务调试完成，此时我们可以思考：</p>
<blockquote>
<p>当一次分片广播到来，各执行器如何根据分片参数去分布式执行任务，保证执行器之间执行的任务不重复呢？</p>
</blockquote>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>学习</tag>
        <tag>后端</tag>
        <tag>黑马程序员</tag>
        <tag>学成在线</tag>
      </tags>
  </entry>
</search>
